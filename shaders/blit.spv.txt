; SPIR-V
; Version: 1.5
; Generator: Khronos SPIR-V Tools Assembler; 0
; Bound: 343
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %shared_uxn %gl_GlobalInvocationID %background %foreground %uxn
               OpExecutionMode %main LocalSize 8 8 1
               OpSource GLSL 450
               OpName %main "main"
               OpName %get_byte_u1_ "get_byte(u1;"
               OpName %addr "addr"
               OpName %get_short_u1_ "get_short(u1;"
               OpName %addr_0 "addr"
               OpName %mask_u1_u1_ "mask(u1;u1;"
               OpName %x "x"
               OpName %mask "mask"
               OpName %get_colour_u1_ "get_colour(u1;"
               OpName %colour_i "colour_i"
               OpName %Shared_UXN_Buffer "Shared_UXN_Buffer"
               OpMemberName %Shared_UXN_Buffer 0 "pc"
               OpMemberName %Shared_UXN_Buffer 1 "dev"
               OpMemberName %Shared_UXN_Buffer 2 "flags"
               OpName %shared_uxn "shared_uxn"
               OpName %shift "shift"
               OpName %r "r"
               OpName %param "param"
               OpName %g "g"
               OpName %param_0 "param"
               OpName %b "b"
               OpName %param_1 "param"
               OpName %sys_colours "sys_colours"
               OpName %param_2 "param"
               OpName %param_3 "param"
               OpName %gl_GlobalInvocationID "gl_GlobalInvocationID"
               OpName %x_0 "x"
               OpName %param_4 "param"
               OpName %y "y"
               OpName %param_5 "param"
               OpName %coords "coords"
               OpName %pixel "pixel"
               OpName %param_6 "param"
               OpName %colour "colour"
               OpName %param_7 "param"
               OpName %background "background"
               OpName %foreground "foreground"
               OpName %param_8 "param"
               OpName %param_9 "param"
               OpName %offset "offset"
               OpName %row "row"
               OpName %Private_UXN_Buffer "Private_UXN_Buffer"
               OpMemberName %Private_UXN_Buffer 0 "ram"
               OpMemberName %Private_UXN_Buffer 1 "wst"
               OpMemberName %Private_UXN_Buffer 2 "pWst"
               OpMemberName %Private_UXN_Buffer 3 "rst"
               OpMemberName %Private_UXN_Buffer 4 "pRst"
               OpName %uxn "uxn"
               OpName %param_10 "param"
               OpName %sprite "sprite"
               OpName %param_11 "param"
               OpName %mode_is_2bpp "mode_is_2bpp"
               OpName %layer_is_foreground "layer_is_foreground"
               OpName %x_1 "x"
               OpName %param_12 "param"
               OpName %y_0 "y"
               OpName %param_13 "param"
               OpName %y_flipped "y_flipped"
               OpName %x_flipped "x_flipped"
               OpName %coords_0 "coords"
               OpName %draw_colour "draw_colour"
               OpName %sprite_low "sprite_low"
               OpName %colour_0 "colour"
               OpName %v_colour "v_colour"
               OpName %param_14 "param"
               OpDecorate %_arr_uint_uint_256 ArrayStride 4
               OpMemberDecorate %Shared_UXN_Buffer 0 Offset 0
               OpMemberDecorate %Shared_UXN_Buffer 1 Offset 4
               OpMemberDecorate %Shared_UXN_Buffer 2 Offset 1028
               OpDecorate %Shared_UXN_Buffer Block
               OpDecorate %shared_uxn DescriptorSet 0
               OpDecorate %shared_uxn Binding 0
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %background DescriptorSet 0
               OpDecorate %background Binding 2
               OpDecorate %foreground DescriptorSet 0
               OpDecorate %foreground Binding 3
               OpDecorate %_arr_uint_uint_65536 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_0 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_1 ArrayStride 4
               OpMemberDecorate %Private_UXN_Buffer 0 Offset 0
               OpMemberDecorate %Private_UXN_Buffer 1 Offset 262144
               OpMemberDecorate %Private_UXN_Buffer 2 Offset 263168
               OpMemberDecorate %Private_UXN_Buffer 3 Offset 263172
               OpMemberDecorate %Private_UXN_Buffer 4 Offset 264196
               OpDecorate %Private_UXN_Buffer Block
               OpDecorate %uxn DescriptorSet 0
               OpDecorate %uxn Binding 1
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
       %void = OpTypeVoid
         %65 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
         %68 = OpTypeFunction %uint %_ptr_Function_uint
       %bool = OpTypeBool
         %70 = OpTypeFunction %bool %_ptr_Function_uint %_ptr_Function_uint
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
         %73 = OpTypeFunction %v4float %_ptr_Function_uint
   %uint_256 = OpConstant %uint 256
%_arr_uint_uint_256 = OpTypeArray %uint %uint_256
%Shared_UXN_Buffer = OpTypeStruct %uint %_arr_uint_uint_256 %uint
%_ptr_StorageBuffer_Shared_UXN_Buffer = OpTypePointer StorageBuffer %Shared_UXN_Buffer
 %shared_uxn = OpVariable %_ptr_StorageBuffer_Shared_UXN_Buffer StorageBuffer
        %int = OpTypeInt 32 1
      %int_1 = OpConstant %int 1
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
      %int_8 = OpConstant %int 8
     %uint_1 = OpConstant %uint 1
     %uint_4 = OpConstant %uint 4
     %uint_3 = OpConstant %uint 3
     %uint_8 = OpConstant %uint 8
    %uint_15 = OpConstant %uint 15
    %uint_10 = OpConstant %uint 10
    %uint_12 = OpConstant %uint 12
     %v3uint = OpTypeVector %uint 3
%_ptr_Function_v3uint = OpTypePointer Function %v3uint
    %v3float = OpTypeVector %float 3
   %float_16 = OpConstant %float 16
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %93 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
      %int_2 = OpConstant %int 2
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
     %v2uint = OpTypeVector %uint 2
    %v2float = OpTypeVector %float 2
         %98 = OpConstantComposite %v2float %float_0 %float_0
     %v2bool = OpTypeVector %bool 2
    %uint_40 = OpConstant %uint 40
    %uint_42 = OpConstant %uint 42
      %v2int = OpTypeVector %int 2
%_ptr_Function_v2int = OpTypePointer Function %v2int
    %uint_46 = OpConstant %uint 46
%_ptr_Function_v4float = OpTypePointer Function %v4float
    %uint_16 = OpConstant %uint 16
     %uint_0 = OpConstant %uint 0
        %108 = OpTypeImage %float 2D 0 0 0 2 Rgba8
%_ptr_UniformConstant_108 = OpTypePointer UniformConstant %108
 %background = OpVariable %_ptr_UniformConstant_108 UniformConstant
  %uint_4096 = OpConstant %uint 4096
 %foreground = OpVariable %_ptr_UniformConstant_108 UniformConstant
  %uint_8192 = OpConstant %uint 8192
   %uint_512 = OpConstant %uint 512
%_ptr_Function_v2uint = OpTypePointer Function %v2uint
 %uint_65536 = OpConstant %uint 65536
%_arr_uint_uint_65536 = OpTypeArray %uint %uint_65536
%_arr_uint_uint_256_0 = OpTypeArray %uint %uint_256
%_arr_uint_uint_256_1 = OpTypeArray %uint %uint_256
%Private_UXN_Buffer = OpTypeStruct %_arr_uint_uint_65536 %_arr_uint_uint_256_0 %uint %_arr_uint_uint_256_1 %uint
%_ptr_StorageBuffer_Private_UXN_Buffer = OpTypePointer StorageBuffer %Private_UXN_Buffer
        %uxn = OpVariable %_ptr_StorageBuffer_Private_UXN_Buffer StorageBuffer
      %int_0 = OpConstant %int 0
    %uint_44 = OpConstant %uint 44
    %uint_47 = OpConstant %uint 47
     %int_11 = OpConstant %int 11
     %int_10 = OpConstant %int 10
      %int_9 = OpConstant %int 9
%_ptr_Function_int = OpTypePointer Function %int
     %uint_5 = OpConstant %uint 5
     %uint_2 = OpConstant %uint 2
%gl_WorkGroupSize = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_1
       %main = OpFunction %void None %65
        %125 = OpLabel
    %param_2 = OpVariable %_ptr_Function_uint Function
    %param_3 = OpVariable %_ptr_Function_uint Function
        %x_0 = OpVariable %_ptr_Function_uint Function
    %param_4 = OpVariable %_ptr_Function_uint Function
          %y = OpVariable %_ptr_Function_uint Function
    %param_5 = OpVariable %_ptr_Function_uint Function
     %coords = OpVariable %_ptr_Function_v2int Function
      %pixel = OpVariable %_ptr_Function_uint Function
    %param_6 = OpVariable %_ptr_Function_uint Function
     %colour = OpVariable %_ptr_Function_v4float Function
    %param_7 = OpVariable %_ptr_Function_uint Function
    %param_8 = OpVariable %_ptr_Function_uint Function
    %param_9 = OpVariable %_ptr_Function_uint Function
     %offset = OpVariable %_ptr_Function_v2uint Function
        %row = OpVariable %_ptr_Function_uint Function
   %param_10 = OpVariable %_ptr_Function_uint Function
     %sprite = OpVariable %_ptr_Function_uint Function
   %param_11 = OpVariable %_ptr_Function_uint Function
%mode_is_2bpp = OpVariable %_ptr_Function_uint Function
%layer_is_foreground = OpVariable %_ptr_Function_uint Function
        %x_1 = OpVariable %_ptr_Function_uint Function
   %param_12 = OpVariable %_ptr_Function_uint Function
        %y_0 = OpVariable %_ptr_Function_uint Function
   %param_13 = OpVariable %_ptr_Function_uint Function
  %y_flipped = OpVariable %_ptr_Function_uint Function
  %x_flipped = OpVariable %_ptr_Function_uint Function
   %coords_0 = OpVariable %_ptr_Function_v2int Function
%draw_colour = OpVariable %_ptr_Function_uint Function
 %sprite_low = OpVariable %_ptr_Function_uint Function
   %colour_0 = OpVariable %_ptr_Function_uint Function
   %v_colour = OpVariable %_ptr_Function_v4float Function
   %param_14 = OpVariable %_ptr_Function_uint Function
        %126 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_2
        %127 = OpLoad %uint %126
               OpStore %param_2 %127
               OpStore %param_3 %uint_256
        %128 = OpFunctionCall %bool %mask_u1_u1_ %param_2 %param_3
               OpSelectionMerge %129 None
               OpBranchConditional %128 %130 %129
        %130 = OpLabel
        %131 = OpLoad %v3uint %gl_GlobalInvocationID
        %132 = OpVectorShuffle %v2uint %131 %131 0 1
        %133 = OpConvertUToF %v2float %132
        %134 = OpFOrdEqual %v2bool %133 %98
        %135 = OpAll %bool %134
               OpBranch %129
        %129 = OpLabel
        %136 = OpPhi %bool %128 %125 %135 %130
               OpSelectionMerge %137 None
               OpBranchConditional %136 %138 %137
        %138 = OpLabel
               OpStore %param_4 %uint_40
        %139 = OpFunctionCall %uint %get_short_u1_ %param_4
               OpStore %x_0 %139
               OpStore %param_5 %uint_42
        %140 = OpFunctionCall %uint %get_short_u1_ %param_5
               OpStore %y %140
        %141 = OpLoad %uint %x_0
        %142 = OpBitcast %int %141
        %143 = OpLoad %uint %y
        %144 = OpBitcast %int %143
        %145 = OpCompositeConstruct %v2int %142 %144
               OpStore %coords %145
               OpStore %param_6 %uint_46
        %146 = OpFunctionCall %uint %get_byte_u1_ %param_6
               OpStore %pixel %146
        %147 = OpLoad %uint %pixel
        %148 = OpBitwiseAnd %uint %147 %uint_15
               OpStore %param_7 %148
        %149 = OpFunctionCall %v4float %get_colour_u1_ %param_7
               OpStore %colour %149
        %150 = OpLoad %uint %pixel
        %151 = OpUDiv %uint %150 %uint_16
        %152 = OpIEqual %bool %151 %uint_0
               OpSelectionMerge %153 None
               OpBranchConditional %152 %154 %153
        %154 = OpLabel
        %155 = OpLoad %108 %background
        %156 = OpLoad %v2int %coords
        %157 = OpLoad %v4float %colour
               OpImageWrite %155 %156 %157
        %158 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_2
        %159 = OpLoad %uint %158
        %160 = OpBitwiseOr %uint %159 %uint_4096
        %161 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_2
               OpStore %161 %160
               OpBranch %153
        %153 = OpLabel
        %162 = OpLoad %uint %pixel
        %163 = OpUDiv %uint %162 %uint_16
        %164 = OpIEqual %bool %163 %uint_4
               OpSelectionMerge %165 None
               OpBranchConditional %164 %166 %165
        %166 = OpLabel
        %167 = OpLoad %108 %foreground
        %168 = OpLoad %v2int %coords
        %169 = OpLoad %v4float %colour
               OpImageWrite %167 %168 %169
        %170 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_2
        %171 = OpLoad %uint %170
        %172 = OpBitwiseOr %uint %171 %uint_8192
        %173 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_2
               OpStore %173 %172
               OpBranch %165
        %165 = OpLabel
               OpBranch %137
        %137 = OpLabel
        %174 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_2
        %175 = OpLoad %uint %174
               OpStore %param_8 %175
               OpStore %param_9 %uint_512
        %176 = OpFunctionCall %bool %mask_u1_u1_ %param_8 %param_9
               OpSelectionMerge %177 None
               OpBranchConditional %176 %178 %177
        %178 = OpLabel
        %179 = OpLoad %v3uint %gl_GlobalInvocationID
        %180 = OpCompositeExtract %uint %179 0
        %181 = OpCompositeExtract %uint %179 1
        %182 = OpCompositeConstruct %v2uint %180 %181
               OpStore %offset %182
               OpStore %param_10 %uint_44
        %183 = OpFunctionCall %uint %get_short_u1_ %param_10
        %184 = OpAccessChain %_ptr_Function_uint %offset %uint_1
        %185 = OpLoad %uint %184
        %186 = OpIAdd %uint %183 %185
        %187 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_0 %186
        %188 = OpLoad %uint %187
               OpStore %row %188
               OpStore %param_11 %uint_47
        %189 = OpFunctionCall %uint %get_byte_u1_ %param_11
               OpStore %sprite %189
        %190 = OpLoad %uint %sprite
        %191 = OpShiftRightLogical %uint %190 %int_11
        %192 = OpBitwiseAnd %uint %191 %uint_1
               OpStore %mode_is_2bpp %192
        %193 = OpLoad %uint %sprite
        %194 = OpShiftRightLogical %uint %193 %int_10
        %195 = OpBitwiseAnd %uint %194 %uint_1
               OpStore %layer_is_foreground %195
               OpStore %param_12 %uint_40
        %196 = OpFunctionCall %uint %get_short_u1_ %param_12
               OpStore %x_1 %196
               OpStore %param_13 %uint_42
        %197 = OpFunctionCall %uint %get_short_u1_ %param_13
               OpStore %y_0 %197
        %198 = OpLoad %uint %sprite
        %199 = OpShiftRightLogical %uint %198 %int_9
        %200 = OpBitwiseAnd %uint %199 %uint_1
               OpStore %y_flipped %200
        %201 = OpLoad %uint %sprite
        %202 = OpShiftRightLogical %uint %201 %int_8
        %203 = OpBitwiseAnd %uint %202 %uint_1
               OpStore %x_flipped %203
        %204 = OpLoad %uint %x_1
        %205 = OpLoad %uint %x_flipped
        %206 = OpISub %uint %uint_1 %205
        %207 = OpAccessChain %_ptr_Function_uint %offset %uint_0
        %208 = OpLoad %uint %207
        %209 = OpIMul %uint %206 %208
        %210 = OpIAdd %uint %204 %209
        %211 = OpLoad %uint %x_flipped
        %212 = OpAccessChain %_ptr_Function_uint %offset %uint_0
        %213 = OpLoad %uint %212
        %214 = OpISub %uint %uint_8 %213
        %215 = OpIMul %uint %211 %214
        %216 = OpIAdd %uint %210 %215
        %217 = OpBitcast %int %216
        %218 = OpAccessChain %_ptr_Function_int %coords_0 %uint_0
               OpStore %218 %217
        %219 = OpLoad %uint %y_0
        %220 = OpLoad %uint %y_flipped
        %221 = OpISub %uint %uint_1 %220
        %222 = OpAccessChain %_ptr_Function_uint %offset %uint_1
        %223 = OpLoad %uint %222
        %224 = OpIMul %uint %221 %223
        %225 = OpIAdd %uint %219 %224
        %226 = OpLoad %uint %y_flipped
        %227 = OpAccessChain %_ptr_Function_uint %offset %uint_1
        %228 = OpLoad %uint %227
        %229 = OpISub %uint %uint_8 %228
        %230 = OpIMul %uint %226 %229
        %231 = OpIAdd %uint %225 %230
        %232 = OpBitcast %int %231
        %233 = OpAccessChain %_ptr_Function_int %coords_0 %uint_1
               OpStore %233 %232
        %234 = OpLoad %uint %mode_is_2bpp
        %235 = OpIEqual %bool %234 %uint_1
               OpSelectionMerge %236 None
               OpBranchConditional %235 %237 %238
        %237 = OpLabel
               OpReturn
        %238 = OpLabel
        %239 = OpLoad %uint %row
        %240 = OpAccessChain %_ptr_Function_uint %offset %uint_0
        %241 = OpLoad %uint %240
        %242 = OpShiftRightLogical %uint %239 %241
        %243 = OpBitwiseAnd %uint %242 %uint_1
               OpStore %draw_colour %243
        %244 = OpLoad %uint %sprite
        %245 = OpBitwiseAnd %uint %244 %uint_15
               OpStore %sprite_low %245
        %246 = OpLoad %uint %draw_colour
        %247 = OpINotEqual %bool %246 %uint_0
        %248 = OpLoad %uint %sprite_low
        %249 = OpIEqual %bool %248 %uint_0
        %250 = OpLogicalAnd %bool %247 %249
               OpSelectionMerge %251 None
               OpBranchConditional %250 %252 %253
        %252 = OpLabel
               OpReturn
        %253 = OpLabel
        %254 = OpLoad %uint %draw_colour
        %255 = OpIEqual %bool %254 %uint_0
               OpSelectionMerge %256 None
               OpBranchConditional %255 %257 %256
        %257 = OpLabel
        %258 = OpLoad %uint %sprite_low
        %259 = OpIEqual %bool %258 %uint_0
        %260 = OpLoad %uint %sprite_low
        %261 = OpIEqual %bool %260 %uint_5
        %262 = OpLogicalOr %bool %259 %261
        %263 = OpLoad %uint %sprite_low
        %264 = OpIEqual %bool %263 %uint_10
        %265 = OpLogicalOr %bool %262 %264
        %266 = OpLoad %uint %sprite_low
        %267 = OpIEqual %bool %266 %uint_15
        %268 = OpLogicalOr %bool %265 %267
               OpBranch %256
        %256 = OpLabel
        %269 = OpPhi %bool %255 %253 %268 %257
               OpSelectionMerge %270 None
               OpBranchConditional %269 %271 %270
        %271 = OpLabel
               OpReturn
        %270 = OpLabel
               OpBranch %251
        %251 = OpLabel
        %272 = OpLoad %uint %sprite_low
        %273 = OpLoad %uint %draw_colour
        %274 = OpISub %uint %uint_1 %273
        %275 = OpIMul %uint %uint_2 %274
        %276 = OpShiftRightLogical %uint %272 %275
        %277 = OpBitwiseAnd %uint %276 %uint_3
               OpStore %colour_0 %277
        %278 = OpLoad %uint %colour_0
               OpStore %param_14 %278
        %279 = OpFunctionCall %v4float %get_colour_u1_ %param_14
               OpStore %v_colour %279
        %280 = OpLoad %uint %layer_is_foreground
        %281 = OpIEqual %bool %280 %uint_1
               OpSelectionMerge %282 None
               OpBranchConditional %281 %283 %284
        %283 = OpLabel
        %285 = OpLoad %108 %foreground
        %286 = OpLoad %v2int %coords_0
        %287 = OpLoad %v4float %v_colour
               OpImageWrite %285 %286 %287
               OpBranch %282
        %284 = OpLabel
        %288 = OpLoad %108 %background
        %289 = OpLoad %v2int %coords_0
        %290 = OpLoad %v4float %v_colour
               OpImageWrite %288 %289 %290
               OpBranch %282
        %282 = OpLabel
               OpBranch %236
        %236 = OpLabel
               OpBranch %177
        %177 = OpLabel
               OpReturn
               OpFunctionEnd
%get_byte_u1_ = OpFunction %uint None %68
       %addr = OpFunctionParameter %_ptr_Function_uint
        %291 = OpLabel
        %292 = OpLoad %uint %addr
        %293 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_1 %292
        %294 = OpLoad %uint %293
               OpReturnValue %294
               OpFunctionEnd
%get_short_u1_ = OpFunction %uint None %68
     %addr_0 = OpFunctionParameter %_ptr_Function_uint
        %295 = OpLabel
        %296 = OpLoad %uint %addr_0
        %297 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_1 %296
        %298 = OpLoad %uint %297
        %299 = OpShiftLeftLogical %uint %298 %int_8
        %300 = OpLoad %uint %addr_0
        %301 = OpIAdd %uint %300 %uint_1
        %302 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_1 %301
        %303 = OpLoad %uint %302
        %304 = OpIAdd %uint %299 %303
               OpReturnValue %304
               OpFunctionEnd
%mask_u1_u1_ = OpFunction %bool None %70
          %x = OpFunctionParameter %_ptr_Function_uint
       %mask = OpFunctionParameter %_ptr_Function_uint
        %305 = OpLabel
        %306 = OpLoad %uint %x
        %307 = OpLoad %uint %mask
        %308 = OpBitwiseAnd %uint %306 %307
        %309 = OpLoad %uint %mask
        %310 = OpIEqual %bool %308 %309
               OpReturnValue %310
               OpFunctionEnd
%get_colour_u1_ = OpFunction %v4float None %73
   %colour_i = OpFunctionParameter %_ptr_Function_uint
        %311 = OpLabel
      %shift = OpVariable %_ptr_Function_uint Function
          %r = OpVariable %_ptr_Function_uint Function
      %param = OpVariable %_ptr_Function_uint Function
          %g = OpVariable %_ptr_Function_uint Function
    %param_0 = OpVariable %_ptr_Function_uint Function
          %b = OpVariable %_ptr_Function_uint Function
    %param_1 = OpVariable %_ptr_Function_uint Function
%sys_colours = OpVariable %_ptr_Function_v3uint Function
        %312 = OpLoad %uint %colour_i
        %313 = OpULessThan %bool %312 %uint_4
               OpSelectionMerge %314 None
               OpBranchConditional %313 %315 %314
        %315 = OpLabel
        %316 = OpLoad %uint %colour_i
        %317 = OpISub %uint %uint_3 %316
        %318 = OpIMul %uint %317 %uint_4
               OpStore %shift %318
               OpStore %param %uint_8
        %319 = OpFunctionCall %uint %get_short_u1_ %param
        %320 = OpLoad %uint %shift
        %321 = OpShiftRightLogical %uint %319 %320
        %322 = OpBitwiseAnd %uint %321 %uint_15
               OpStore %r %322
               OpStore %param_0 %uint_10
        %323 = OpFunctionCall %uint %get_short_u1_ %param_0
        %324 = OpLoad %uint %shift
        %325 = OpShiftRightLogical %uint %323 %324
        %326 = OpBitwiseAnd %uint %325 %uint_15
               OpStore %g %326
               OpStore %param_1 %uint_12
        %327 = OpFunctionCall %uint %get_short_u1_ %param_1
        %328 = OpLoad %uint %shift
        %329 = OpShiftRightLogical %uint %327 %328
        %330 = OpBitwiseAnd %uint %329 %uint_15
               OpStore %b %330
        %331 = OpLoad %uint %r
        %332 = OpLoad %uint %g
        %333 = OpLoad %uint %b
        %334 = OpCompositeConstruct %v3uint %331 %332 %333
               OpStore %sys_colours %334
        %335 = OpLoad %v3uint %sys_colours
        %336 = OpConvertUToF %v3float %335
        %337 = OpCompositeConstruct %v3float %float_16 %float_16 %float_16
        %338 = OpFDiv %v3float %336 %337
        %339 = OpCompositeExtract %float %338 0
        %340 = OpCompositeExtract %float %338 1
        %341 = OpCompositeExtract %float %338 2
        %342 = OpCompositeConstruct %v4float %339 %340 %341 %float_1
               OpReturnValue %342
        %314 = OpLabel
               OpReturnValue %93
               OpFunctionEnd
