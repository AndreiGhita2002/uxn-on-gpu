; SPIR-V
; Version: 1.5
; Generator: Khronos SPIR-V Tools Assembler; 0
; Bound: 345
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %uxn %gl_GlobalInvocationID %background %foreground
               OpExecutionMode %main LocalSize 8 8 1
               OpSource GLSL 450
               OpName %main "main"
               OpName %get_byte_u1_ "get_byte(u1;"
               OpName %addr "addr"
               OpName %get_short_u1_ "get_short(u1;"
               OpName %addr_0 "addr"
               OpName %mask_u1_u1_ "mask(u1;u1;"
               OpName %x "x"
               OpName %mask "mask"
               OpName %get_colour_u1_ "get_colour(u1;"
               OpName %colour_i "colour_i"
               OpName %UXN_Buffer "UXN_Buffer"
               OpMemberName %UXN_Buffer 0 "pc"
               OpMemberName %UXN_Buffer 1 "ram"
               OpMemberName %UXN_Buffer 2 "wst"
               OpMemberName %UXN_Buffer 3 "pWst"
               OpMemberName %UXN_Buffer 4 "rst"
               OpMemberName %UXN_Buffer 5 "pRst"
               OpMemberName %UXN_Buffer 6 "dev"
               OpMemberName %UXN_Buffer 7 "deviceFlags"
               OpName %uxn "uxn"
               OpName %shift "shift"
               OpName %r "r"
               OpName %param "param"
               OpName %g "g"
               OpName %param_0 "param"
               OpName %b "b"
               OpName %param_1 "param"
               OpName %sys_colours "sys_colours"
               OpName %param_2 "param"
               OpName %param_3 "param"
               OpName %gl_GlobalInvocationID "gl_GlobalInvocationID"
               OpName %x_0 "x"
               OpName %param_4 "param"
               OpName %y "y"
               OpName %param_5 "param"
               OpName %coords "coords"
               OpName %pixel "pixel"
               OpName %param_6 "param"
               OpName %color "color"
               OpName %param_7 "param"
               OpName %background "background"
               OpName %foreground "foreground"
               OpName %param_8 "param"
               OpName %param_9 "param"
               OpName %row "row"
               OpName %param_10 "param"
               OpName %param_11 "param"
               OpName %sprite "sprite"
               OpName %param_12 "param"
               OpName %mode_is_2bpp "mode_is_2bpp"
               OpName %layer_is_foreground "layer_is_foreground"
               OpName %x_1 "x"
               OpName %param_13 "param"
               OpName %y_0 "y"
               OpName %param_14 "param"
               OpName %y_flipped "y_flipped"
               OpName %x_flipped "x_flipped"
               OpName %coords_0 "coords"
               OpName %draw_colour "draw_colour"
               OpName %sprite_low "sprite_low"
               OpName %colour_1 "colour_1"
               OpName %v_color_1 "v_color_1"
               OpName %param_15 "param"
               OpName %colour_0 "colour_0"
               OpName %v_color_0 "v_color_0"
               OpName %param_16 "param"
               OpDecorate %_arr_uint_uint_65536 ArrayStride 4
               OpDecorate %_arr_uint_uint_256 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_0 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_1 ArrayStride 4
               OpMemberDecorate %UXN_Buffer 0 Offset 0
               OpMemberDecorate %UXN_Buffer 1 Offset 4
               OpMemberDecorate %UXN_Buffer 2 Offset 262148
               OpMemberDecorate %UXN_Buffer 3 Offset 263172
               OpMemberDecorate %UXN_Buffer 4 Offset 263176
               OpMemberDecorate %UXN_Buffer 5 Offset 264200
               OpMemberDecorate %UXN_Buffer 6 Offset 264204
               OpMemberDecorate %UXN_Buffer 7 Offset 265228
               OpDecorate %UXN_Buffer Block
               OpDecorate %uxn DescriptorSet 0
               OpDecorate %uxn Binding 0
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %background DescriptorSet 0
               OpDecorate %background Binding 1
               OpDecorate %foreground DescriptorSet 0
               OpDecorate %foreground Binding 2
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
       %void = OpTypeVoid
         %66 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
         %69 = OpTypeFunction %uint %_ptr_Function_uint
       %bool = OpTypeBool
         %71 = OpTypeFunction %bool %_ptr_Function_uint %_ptr_Function_uint
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
         %74 = OpTypeFunction %v4float %_ptr_Function_uint
 %uint_65536 = OpConstant %uint 65536
%_arr_uint_uint_65536 = OpTypeArray %uint %uint_65536
   %uint_256 = OpConstant %uint 256
%_arr_uint_uint_256 = OpTypeArray %uint %uint_256
%_arr_uint_uint_256_0 = OpTypeArray %uint %uint_256
%_arr_uint_uint_256_1 = OpTypeArray %uint %uint_256
 %UXN_Buffer = OpTypeStruct %uint %_arr_uint_uint_65536 %_arr_uint_uint_256 %uint %_arr_uint_uint_256_0 %uint %_arr_uint_uint_256_1 %uint
%_ptr_StorageBuffer_UXN_Buffer = OpTypePointer StorageBuffer %UXN_Buffer
        %uxn = OpVariable %_ptr_StorageBuffer_UXN_Buffer StorageBuffer
        %int = OpTypeInt 32 1
      %int_6 = OpConstant %int 6
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
      %int_8 = OpConstant %int 8
     %uint_1 = OpConstant %uint 1
     %uint_4 = OpConstant %uint 4
     %uint_3 = OpConstant %uint 3
     %uint_8 = OpConstant %uint 8
    %uint_15 = OpConstant %uint 15
    %uint_10 = OpConstant %uint 10
    %uint_12 = OpConstant %uint 12
     %v3uint = OpTypeVector %uint 3
%_ptr_Function_v3uint = OpTypePointer Function %v3uint
    %v3float = OpTypeVector %float 3
   %float_16 = OpConstant %float 16
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %95 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
      %int_7 = OpConstant %int 7
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
     %v2uint = OpTypeVector %uint 2
    %v2float = OpTypeVector %float 2
        %100 = OpConstantComposite %v2float %float_0 %float_0
     %v2bool = OpTypeVector %bool 2
    %uint_40 = OpConstant %uint 40
    %uint_42 = OpConstant %uint 42
      %v2int = OpTypeVector %int 2
%_ptr_Function_v2int = OpTypePointer Function %v2int
    %uint_46 = OpConstant %uint 46
%_ptr_Function_v4float = OpTypePointer Function %v4float
    %uint_16 = OpConstant %uint 16
     %uint_0 = OpConstant %uint 0
        %110 = OpTypeImage %float 2D 0 0 0 2 Rgba8
%_ptr_UniformConstant_110 = OpTypePointer UniformConstant %110
 %background = OpVariable %_ptr_UniformConstant_110 UniformConstant
  %uint_4096 = OpConstant %uint 4096
 %foreground = OpVariable %_ptr_UniformConstant_110 UniformConstant
  %uint_8192 = OpConstant %uint 8192
   %uint_512 = OpConstant %uint 512
    %uint_44 = OpConstant %uint 44
%_ptr_Input_uint = OpTypePointer Input %uint
    %uint_47 = OpConstant %uint 47
     %int_11 = OpConstant %int 11
     %int_10 = OpConstant %int 10
      %int_9 = OpConstant %int 9
%_ptr_Function_int = OpTypePointer Function %int
      %int_2 = OpConstant %int 2
     %uint_5 = OpConstant %uint 5
%gl_WorkGroupSize = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_1
       %main = OpFunction %void None %66
        %124 = OpLabel
    %param_2 = OpVariable %_ptr_Function_uint Function
    %param_3 = OpVariable %_ptr_Function_uint Function
        %x_0 = OpVariable %_ptr_Function_uint Function
    %param_4 = OpVariable %_ptr_Function_uint Function
          %y = OpVariable %_ptr_Function_uint Function
    %param_5 = OpVariable %_ptr_Function_uint Function
     %coords = OpVariable %_ptr_Function_v2int Function
      %pixel = OpVariable %_ptr_Function_uint Function
    %param_6 = OpVariable %_ptr_Function_uint Function
      %color = OpVariable %_ptr_Function_v4float Function
    %param_7 = OpVariable %_ptr_Function_uint Function
    %param_8 = OpVariable %_ptr_Function_uint Function
    %param_9 = OpVariable %_ptr_Function_uint Function
        %row = OpVariable %_ptr_Function_uint Function
   %param_10 = OpVariable %_ptr_Function_uint Function
   %param_11 = OpVariable %_ptr_Function_uint Function
     %sprite = OpVariable %_ptr_Function_uint Function
   %param_12 = OpVariable %_ptr_Function_uint Function
%mode_is_2bpp = OpVariable %_ptr_Function_uint Function
%layer_is_foreground = OpVariable %_ptr_Function_uint Function
        %x_1 = OpVariable %_ptr_Function_uint Function
   %param_13 = OpVariable %_ptr_Function_uint Function
        %y_0 = OpVariable %_ptr_Function_uint Function
   %param_14 = OpVariable %_ptr_Function_uint Function
  %y_flipped = OpVariable %_ptr_Function_uint Function
  %x_flipped = OpVariable %_ptr_Function_uint Function
   %coords_0 = OpVariable %_ptr_Function_v2int Function
%draw_colour = OpVariable %_ptr_Function_uint Function
 %sprite_low = OpVariable %_ptr_Function_uint Function
   %colour_1 = OpVariable %_ptr_Function_uint Function
  %v_color_1 = OpVariable %_ptr_Function_v4float Function
   %param_15 = OpVariable %_ptr_Function_uint Function
   %colour_0 = OpVariable %_ptr_Function_uint Function
  %v_color_0 = OpVariable %_ptr_Function_v4float Function
   %param_16 = OpVariable %_ptr_Function_uint Function
        %125 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %126 = OpLoad %uint %125
               OpStore %param_2 %126
               OpStore %param_3 %uint_256
        %127 = OpFunctionCall %bool %mask_u1_u1_ %param_2 %param_3
               OpSelectionMerge %128 None
               OpBranchConditional %127 %129 %128
        %129 = OpLabel
        %130 = OpLoad %v3uint %gl_GlobalInvocationID
        %131 = OpVectorShuffle %v2uint %130 %130 0 1
        %132 = OpConvertUToF %v2float %131
        %133 = OpFOrdEqual %v2bool %132 %100
        %134 = OpAll %bool %133
               OpBranch %128
        %128 = OpLabel
        %135 = OpPhi %bool %127 %124 %134 %129
               OpSelectionMerge %136 None
               OpBranchConditional %135 %137 %136
        %137 = OpLabel
               OpStore %param_4 %uint_40
        %138 = OpFunctionCall %uint %get_short_u1_ %param_4
               OpStore %x_0 %138
               OpStore %param_5 %uint_42
        %139 = OpFunctionCall %uint %get_short_u1_ %param_5
               OpStore %y %139
        %140 = OpLoad %uint %x_0
        %141 = OpBitcast %int %140
        %142 = OpLoad %uint %y
        %143 = OpBitcast %int %142
        %144 = OpCompositeConstruct %v2int %141 %143
               OpStore %coords %144
               OpStore %param_6 %uint_46
        %145 = OpFunctionCall %uint %get_byte_u1_ %param_6
               OpStore %pixel %145
        %146 = OpLoad %uint %pixel
        %147 = OpBitwiseAnd %uint %146 %uint_15
               OpStore %param_7 %147
        %148 = OpFunctionCall %v4float %get_colour_u1_ %param_7
               OpStore %color %148
        %149 = OpLoad %uint %pixel
        %150 = OpUDiv %uint %149 %uint_16
        %151 = OpIEqual %bool %150 %uint_0
               OpSelectionMerge %152 None
               OpBranchConditional %151 %153 %152
        %153 = OpLabel
        %154 = OpLoad %110 %background
        %155 = OpLoad %v2int %coords
        %156 = OpLoad %v4float %color
               OpImageWrite %154 %155 %156
        %157 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %158 = OpLoad %uint %157
        %159 = OpBitwiseOr %uint %158 %uint_4096
        %160 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
               OpStore %160 %159
               OpBranch %152
        %152 = OpLabel
        %161 = OpLoad %uint %pixel
        %162 = OpUDiv %uint %161 %uint_16
        %163 = OpIEqual %bool %162 %uint_4
               OpSelectionMerge %164 None
               OpBranchConditional %163 %165 %164
        %165 = OpLabel
        %166 = OpLoad %110 %foreground
        %167 = OpLoad %v2int %coords
        %168 = OpLoad %v4float %color
               OpImageWrite %166 %167 %168
        %169 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %170 = OpLoad %uint %169
        %171 = OpBitwiseOr %uint %170 %uint_8192
        %172 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
               OpStore %172 %171
               OpBranch %164
        %164 = OpLabel
               OpBranch %136
        %136 = OpLabel
        %173 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %174 = OpLoad %uint %173
               OpStore %param_8 %174
               OpStore %param_9 %uint_512
        %175 = OpFunctionCall %bool %mask_u1_u1_ %param_8 %param_9
               OpSelectionMerge %176 None
               OpBranchConditional %175 %177 %176
        %177 = OpLabel
               OpStore %param_10 %uint_44
        %178 = OpFunctionCall %uint %get_short_u1_ %param_10
        %179 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %180 = OpLoad %uint %179
        %181 = OpIAdd %uint %178 %180
               OpStore %param_11 %181
        %182 = OpFunctionCall %uint %get_byte_u1_ %param_11
               OpStore %row %182
               OpStore %param_12 %uint_47
        %183 = OpFunctionCall %uint %get_byte_u1_ %param_12
               OpStore %sprite %183
        %184 = OpLoad %uint %sprite
        %185 = OpShiftRightLogical %uint %184 %int_11
        %186 = OpBitwiseAnd %uint %185 %uint_1
               OpStore %mode_is_2bpp %186
        %187 = OpLoad %uint %sprite
        %188 = OpShiftRightLogical %uint %187 %int_10
        %189 = OpBitwiseAnd %uint %188 %uint_1
               OpStore %layer_is_foreground %189
               OpStore %param_13 %uint_40
        %190 = OpFunctionCall %uint %get_short_u1_ %param_13
               OpStore %x_1 %190
               OpStore %param_14 %uint_42
        %191 = OpFunctionCall %uint %get_short_u1_ %param_14
               OpStore %y_0 %191
        %192 = OpLoad %uint %sprite
        %193 = OpShiftRightLogical %uint %192 %int_9
        %194 = OpBitwiseAnd %uint %193 %uint_1
               OpStore %y_flipped %194
        %195 = OpLoad %uint %sprite
        %196 = OpShiftRightLogical %uint %195 %int_8
        %197 = OpBitwiseAnd %uint %196 %uint_1
               OpStore %x_flipped %197
        %198 = OpLoad %uint %x_1
        %199 = OpLoad %uint %x_flipped
        %200 = OpISub %uint %uint_1 %199
        %201 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %202 = OpLoad %uint %201
        %203 = OpIMul %uint %200 %202
        %204 = OpIAdd %uint %198 %203
        %205 = OpLoad %uint %x_flipped
        %206 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %207 = OpLoad %uint %206
        %208 = OpISub %uint %uint_8 %207
        %209 = OpIMul %uint %205 %208
        %210 = OpIAdd %uint %204 %209
        %211 = OpBitcast %int %210
        %212 = OpAccessChain %_ptr_Function_int %coords_0 %uint_0
               OpStore %212 %211
        %213 = OpLoad %uint %y_0
        %214 = OpLoad %uint %y_flipped
        %215 = OpISub %uint %uint_1 %214
        %216 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_1
        %217 = OpLoad %uint %216
        %218 = OpIMul %uint %215 %217
        %219 = OpIAdd %uint %213 %218
        %220 = OpLoad %uint %y_flipped
        %221 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_1
        %222 = OpLoad %uint %221
        %223 = OpISub %uint %uint_8 %222
        %224 = OpIMul %uint %220 %223
        %225 = OpIAdd %uint %219 %224
        %226 = OpBitcast %int %225
        %227 = OpAccessChain %_ptr_Function_int %coords_0 %uint_1
               OpStore %227 %226
        %228 = OpLoad %uint %mode_is_2bpp
        %229 = OpIEqual %bool %228 %uint_1
               OpSelectionMerge %230 None
               OpBranchConditional %229 %231 %232
        %231 = OpLabel
               OpReturn
        %232 = OpLabel
        %233 = OpLoad %uint %row
        %234 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %235 = OpLoad %uint %234
        %236 = OpShiftRightLogical %uint %233 %235
        %237 = OpBitwiseAnd %uint %236 %uint_1
               OpStore %draw_colour %237
        %238 = OpLoad %uint %sprite
        %239 = OpBitwiseAnd %uint %238 %uint_15
               OpStore %sprite_low %239
        %240 = OpLoad %uint %draw_colour
        %241 = OpIEqual %bool %240 %uint_1
               OpSelectionMerge %242 None
               OpBranchConditional %241 %243 %244
        %243 = OpLabel
        %245 = OpLoad %uint %sprite_low
        %246 = OpIEqual %bool %245 %uint_0
               OpSelectionMerge %247 None
               OpBranchConditional %246 %248 %247
        %248 = OpLabel
               OpReturn
        %247 = OpLabel
        %249 = OpLoad %uint %sprite_low
        %250 = OpShiftRightLogical %uint %249 %int_2
        %251 = OpBitwiseAnd %uint %250 %uint_3
               OpStore %colour_1 %251
        %252 = OpLoad %uint %colour_1
               OpStore %param_15 %252
        %253 = OpFunctionCall %v4float %get_colour_u1_ %param_15
               OpStore %v_color_1 %253
        %254 = OpLoad %uint %layer_is_foreground
        %255 = OpIEqual %bool %254 %uint_1
               OpSelectionMerge %256 None
               OpBranchConditional %255 %257 %258
        %257 = OpLabel
        %259 = OpLoad %110 %foreground
        %260 = OpLoad %v2int %coords_0
        %261 = OpLoad %v4float %v_color_1
               OpImageWrite %259 %260 %261
               OpBranch %256
        %258 = OpLabel
        %262 = OpLoad %110 %background
        %263 = OpLoad %v2int %coords_0
        %264 = OpLoad %v4float %v_color_1
               OpImageWrite %262 %263 %264
               OpBranch %256
        %256 = OpLabel
               OpBranch %242
        %244 = OpLabel
        %265 = OpLoad %uint %sprite_low
        %266 = OpIEqual %bool %265 %uint_0
        %267 = OpLoad %uint %sprite_low
        %268 = OpIEqual %bool %267 %uint_5
        %269 = OpLogicalOr %bool %266 %268
        %270 = OpLoad %uint %sprite_low
        %271 = OpIEqual %bool %270 %uint_10
        %272 = OpLogicalOr %bool %269 %271
        %273 = OpLoad %uint %sprite_low
        %274 = OpIEqual %bool %273 %uint_15
        %275 = OpLogicalOr %bool %272 %274
               OpSelectionMerge %276 None
               OpBranchConditional %275 %277 %276
        %277 = OpLabel
               OpReturn
        %276 = OpLabel
        %278 = OpLoad %uint %sprite_low
        %279 = OpBitwiseAnd %uint %278 %uint_3
               OpStore %colour_0 %279
        %280 = OpLoad %uint %colour_0
               OpStore %param_16 %280
        %281 = OpFunctionCall %v4float %get_colour_u1_ %param_16
               OpStore %v_color_0 %281
        %282 = OpLoad %uint %layer_is_foreground
        %283 = OpIEqual %bool %282 %uint_1
               OpSelectionMerge %284 None
               OpBranchConditional %283 %285 %286
        %285 = OpLabel
        %287 = OpLoad %110 %foreground
        %288 = OpLoad %v2int %coords_0
        %289 = OpLoad %v4float %v_color_0
               OpImageWrite %287 %288 %289
               OpBranch %284
        %286 = OpLabel
        %290 = OpLoad %110 %background
        %291 = OpLoad %v2int %coords_0
        %292 = OpLoad %v4float %v_color_0
               OpImageWrite %290 %291 %292
               OpBranch %284
        %284 = OpLabel
               OpBranch %242
        %242 = OpLabel
               OpBranch %230
        %230 = OpLabel
               OpBranch %176
        %176 = OpLabel
               OpReturn
               OpFunctionEnd
%get_byte_u1_ = OpFunction %uint None %69
       %addr = OpFunctionParameter %_ptr_Function_uint
        %293 = OpLabel
        %294 = OpLoad %uint %addr
        %295 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_6 %294
        %296 = OpLoad %uint %295
               OpReturnValue %296
               OpFunctionEnd
%get_short_u1_ = OpFunction %uint None %69
     %addr_0 = OpFunctionParameter %_ptr_Function_uint
        %297 = OpLabel
        %298 = OpLoad %uint %addr_0
        %299 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_6 %298
        %300 = OpLoad %uint %299
        %301 = OpShiftLeftLogical %uint %300 %int_8
        %302 = OpLoad %uint %addr_0
        %303 = OpIAdd %uint %302 %uint_1
        %304 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_6 %303
        %305 = OpLoad %uint %304
        %306 = OpIAdd %uint %301 %305
               OpReturnValue %306
               OpFunctionEnd
%mask_u1_u1_ = OpFunction %bool None %71
          %x = OpFunctionParameter %_ptr_Function_uint
       %mask = OpFunctionParameter %_ptr_Function_uint
        %307 = OpLabel
        %308 = OpLoad %uint %x
        %309 = OpLoad %uint %mask
        %310 = OpBitwiseAnd %uint %308 %309
        %311 = OpLoad %uint %mask
        %312 = OpIEqual %bool %310 %311
               OpReturnValue %312
               OpFunctionEnd
%get_colour_u1_ = OpFunction %v4float None %74
   %colour_i = OpFunctionParameter %_ptr_Function_uint
        %313 = OpLabel
      %shift = OpVariable %_ptr_Function_uint Function
          %r = OpVariable %_ptr_Function_uint Function
      %param = OpVariable %_ptr_Function_uint Function
          %g = OpVariable %_ptr_Function_uint Function
    %param_0 = OpVariable %_ptr_Function_uint Function
          %b = OpVariable %_ptr_Function_uint Function
    %param_1 = OpVariable %_ptr_Function_uint Function
%sys_colours = OpVariable %_ptr_Function_v3uint Function
        %314 = OpLoad %uint %colour_i
        %315 = OpULessThan %bool %314 %uint_4
               OpSelectionMerge %316 None
               OpBranchConditional %315 %317 %316
        %317 = OpLabel
        %318 = OpLoad %uint %colour_i
        %319 = OpISub %uint %uint_3 %318
        %320 = OpIMul %uint %319 %uint_4
               OpStore %shift %320
               OpStore %param %uint_8
        %321 = OpFunctionCall %uint %get_short_u1_ %param
        %322 = OpLoad %uint %shift
        %323 = OpShiftRightLogical %uint %321 %322
        %324 = OpBitwiseAnd %uint %323 %uint_15
               OpStore %r %324
               OpStore %param_0 %uint_10
        %325 = OpFunctionCall %uint %get_short_u1_ %param_0
        %326 = OpLoad %uint %shift
        %327 = OpShiftRightLogical %uint %325 %326
        %328 = OpBitwiseAnd %uint %327 %uint_15
               OpStore %g %328
               OpStore %param_1 %uint_12
        %329 = OpFunctionCall %uint %get_short_u1_ %param_1
        %330 = OpLoad %uint %shift
        %331 = OpShiftRightLogical %uint %329 %330
        %332 = OpBitwiseAnd %uint %331 %uint_15
               OpStore %b %332
        %333 = OpLoad %uint %r
        %334 = OpLoad %uint %g
        %335 = OpLoad %uint %b
        %336 = OpCompositeConstruct %v3uint %333 %334 %335
               OpStore %sys_colours %336
        %337 = OpLoad %v3uint %sys_colours
        %338 = OpConvertUToF %v3float %337
        %339 = OpCompositeConstruct %v3float %float_16 %float_16 %float_16
        %340 = OpFDiv %v3float %338 %339
        %341 = OpCompositeExtract %float %340 0
        %342 = OpCompositeExtract %float %340 1
        %343 = OpCompositeExtract %float %340 2
        %344 = OpCompositeConstruct %v4float %341 %342 %343 %float_1
               OpReturnValue %344
        %316 = OpLabel
               OpReturnValue %95
               OpFunctionEnd
