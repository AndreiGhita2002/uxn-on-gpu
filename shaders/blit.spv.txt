; SPIR-V
; Version: 1.5
; Generator: Khronos SPIR-V Tools Assembler; 0
; Bound: 624
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %shared_uxn %uxn %gl_GlobalInvocationID %background %foreground %gl_LocalInvocationIndex
               OpExecutionMode %main LocalSize 8 8 1
               OpSource GLSL 450
               OpName %main "main"
               OpName %get_byte_u1_ "get_byte(u1;"
               OpName %addr "addr"
               OpName %get_short_u1_ "get_short(u1;"
               OpName %addr_0 "addr"
               OpName %to_short_u1_u1_ "to_short(u1;u1;"
               OpName %v "v"
               OpName %addr_1 "addr"
               OpName %mask_u1_u1_ "mask(u1;u1;"
               OpName %x "x"
               OpName %mask "mask"
               OpName %get_colour_u1_ "get_colour(u1;"
               OpName %colour_i "colour_i"
               OpName %get_2bpp_colour_i_u1_u1_ "get_2bpp_colour_i(u1;u1;"
               OpName %sprite_low "sprite_low"
               OpName %value "value"
               OpName %colour_2bpp_u1_vu2_vi2_i1_ "colour_2bpp(u1;vu2;vi2;i1;"
               OpName %sprite_low_0 "sprite_low"
               OpName %offset "offset"
               OpName %auto_xy "auto_xy"
               OpName %auto_i "auto_i"
               OpName %colour_1bpp_u1_vu2_vi2_i1_ "colour_1bpp(u1;vu2;vi2;i1;"
               OpName %sprite_low_1 "sprite_low"
               OpName %offset_0 "offset"
               OpName %auto_xy_0 "auto_xy"
               OpName %auto_i_0 "auto_i"
               OpName %Shared_UXN_Buffer "Shared_UXN_Buffer"
               OpMemberName %Shared_UXN_Buffer 0 "pc"
               OpMemberName %Shared_UXN_Buffer 1 "dev"
               OpMemberName %Shared_UXN_Buffer 2 "flags"
               OpName %shared_uxn "shared_uxn"
               OpName %shift "shift"
               OpName %r "r"
               OpName %param "param"
               OpName %g "g"
               OpName %param_0 "param"
               OpName %b "b"
               OpName %param_1 "param"
               OpName %sys_colours "sys_colours"
               OpName %base_colour "base_colour"
               OpName %mix_colour "mix_colour"
               OpName %addr_2 "addr"
               OpName %param_2 "param"
               OpName %row "row"
               OpName %Private_UXN_Buffer "Private_UXN_Buffer"
               OpMemberName %Private_UXN_Buffer 0 "ram"
               OpMemberName %Private_UXN_Buffer 1 "wst"
               OpMemberName %Private_UXN_Buffer 2 "pWst"
               OpMemberName %Private_UXN_Buffer 3 "rst"
               OpMemberName %Private_UXN_Buffer 4 "pRst"
               OpName %uxn "uxn"
               OpName %draw_colour "draw_colour"
               OpName %colour_i_0 "colour_i"
               OpName %param_3 "param"
               OpName %param_4 "param"
               OpName %param_5 "param"
               OpName %addr_3 "addr"
               OpName %param_6 "param"
               OpName %row_0 "row"
               OpName %draw_colour_0 "draw_colour"
               OpName %colour "colour"
               OpName %param_7 "param"
               OpName %offset_1 "offset"
               OpName %gl_GlobalInvocationID "gl_GlobalInvocationID"
               OpName %param_8 "param"
               OpName %param_9 "param"
               OpName %x_0 "x"
               OpName %param_10 "param"
               OpName %y "y"
               OpName %param_11 "param"
               OpName %coords "coords"
               OpName %pixel "pixel"
               OpName %param_12 "param"
               OpName %colour_0 "colour"
               OpName %param_13 "param"
               OpName %background "background"
               OpName %foreground "foreground"
               OpName %param_14 "param"
               OpName %param_15 "param"
               OpName %sprite "sprite"
               OpName %param_16 "param"
               OpName %sprite_low_2 "sprite_low"
               OpName %mode_is_2bpp "mode_is_2bpp"
               OpName %layer_is_foreground "layer_is_foreground"
               OpName %x_1 "x"
               OpName %param_17 "param"
               OpName %y_0 "y"
               OpName %param_18 "param"
               OpName %y_flipped "y_flipped"
               OpName %x_flipped "x_flipped"
               OpName %coords_0 "coords"
               OpName %auto_byte "auto_byte"
               OpName %param_19 "param"
               OpName %auto_length "auto_length"
               OpName %auto_xy_1 "auto_xy"
               OpName %auto_addr "auto_addr"
               OpName %i "i"
               OpName %o "o"
               OpName %v_colour "v_colour"
               OpName %param_20 "param"
               OpName %param_21 "param"
               OpName %param_22 "param"
               OpName %param_23 "param"
               OpName %param_24 "param"
               OpName %param_25 "param"
               OpName %param_26 "param"
               OpName %param_27 "param"
               OpName %gl_LocalInvocationIndex "gl_LocalInvocationIndex"
               OpName %param_28 "param"
               OpName %param_29 "param"
               OpName %param_30 "param"
               OpName %param_31 "param"
               OpName %addr_4 "addr"
               OpName %param_32 "param"
               OpName %s "s"
               OpName %param_33 "param"
               OpName %param_34 "param"
               OpDecorate %_arr_uint_uint_256 ArrayStride 4
               OpMemberDecorate %Shared_UXN_Buffer 0 Offset 0
               OpMemberDecorate %Shared_UXN_Buffer 1 Offset 4
               OpMemberDecorate %Shared_UXN_Buffer 2 Offset 1028
               OpDecorate %Shared_UXN_Buffer Block
               OpDecorate %shared_uxn DescriptorSet 0
               OpDecorate %shared_uxn Binding 0
               OpDecorate %_arr_uint_uint_65536 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_0 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_1 ArrayStride 4
               OpMemberDecorate %Private_UXN_Buffer 0 Offset 0
               OpMemberDecorate %Private_UXN_Buffer 1 Offset 262144
               OpMemberDecorate %Private_UXN_Buffer 2 Offset 263168
               OpMemberDecorate %Private_UXN_Buffer 3 Offset 263172
               OpMemberDecorate %Private_UXN_Buffer 4 Offset 264196
               OpDecorate %Private_UXN_Buffer Block
               OpDecorate %uxn DescriptorSet 0
               OpDecorate %uxn Binding 1
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %background DescriptorSet 1
               OpDecorate %background Binding 2
               OpDecorate %foreground DescriptorSet 1
               OpDecorate %foreground Binding 3
               OpDecorate %gl_LocalInvocationIndex BuiltIn LocalInvocationIndex
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
       %void = OpTypeVoid
        %117 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
        %120 = OpTypeFunction %uint %_ptr_Function_uint
        %121 = OpTypeFunction %void %_ptr_Function_uint %_ptr_Function_uint
       %bool = OpTypeBool
        %123 = OpTypeFunction %bool %_ptr_Function_uint %_ptr_Function_uint
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
        %126 = OpTypeFunction %v4float %_ptr_Function_uint
        %127 = OpTypeFunction %uint %_ptr_Function_uint %_ptr_Function_uint
     %v2uint = OpTypeVector %uint 2
%_ptr_Function_v2uint = OpTypePointer Function %v2uint
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
%_ptr_Function_v2int = OpTypePointer Function %v2int
%_ptr_Function_int = OpTypePointer Function %int
        %134 = OpTypeFunction %v4float %_ptr_Function_uint %_ptr_Function_v2uint %_ptr_Function_v2int %_ptr_Function_int
   %uint_256 = OpConstant %uint 256
%_arr_uint_uint_256 = OpTypeArray %uint %uint_256
%Shared_UXN_Buffer = OpTypeStruct %uint %_arr_uint_uint_256 %uint
%_ptr_StorageBuffer_Shared_UXN_Buffer = OpTypePointer StorageBuffer %Shared_UXN_Buffer
 %shared_uxn = OpVariable %_ptr_StorageBuffer_Shared_UXN_Buffer StorageBuffer
      %int_1 = OpConstant %int 1
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
      %int_8 = OpConstant %int 8
     %uint_1 = OpConstant %uint 1
   %uint_255 = OpConstant %uint 255
     %uint_4 = OpConstant %uint 4
     %uint_3 = OpConstant %uint 3
     %uint_8 = OpConstant %uint 8
    %uint_15 = OpConstant %uint 15
    %uint_10 = OpConstant %uint 10
    %uint_12 = OpConstant %uint 12
     %v3uint = OpTypeVector %uint 3
%_ptr_Function_v3uint = OpTypePointer Function %v3uint
    %v3float = OpTypeVector %float 3
   %float_16 = OpConstant %float 16
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
        %154 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
%uint_4294967295 = OpConstant %uint 4294967295
      %int_2 = OpConstant %int 2
     %uint_0 = OpConstant %uint 0
     %uint_5 = OpConstant %uint 5
     %uint_2 = OpConstant %uint 2
    %uint_44 = OpConstant %uint 44
     %int_16 = OpConstant %int 16
 %uint_65536 = OpConstant %uint 65536
%_arr_uint_uint_65536 = OpTypeArray %uint %uint_65536
%_arr_uint_uint_256_0 = OpTypeArray %uint %uint_256
%_arr_uint_uint_256_1 = OpTypeArray %uint %uint_256
%Private_UXN_Buffer = OpTypeStruct %_arr_uint_uint_65536 %_arr_uint_uint_256_0 %uint %_arr_uint_uint_256_1 %uint
%_ptr_StorageBuffer_Private_UXN_Buffer = OpTypePointer StorageBuffer %Private_UXN_Buffer
        %uxn = OpVariable %_ptr_StorageBuffer_Private_UXN_Buffer StorageBuffer
      %int_0 = OpConstant %int 0
        %165 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
        %167 = OpConstantComposite %v2uint %uint_0 %uint_0
     %v2bool = OpTypeVector %bool 2
    %uint_40 = OpConstant %uint 40
    %uint_42 = OpConstant %uint 42
    %uint_46 = OpConstant %uint 46
%_ptr_Function_v4float = OpTypePointer Function %v4float
    %uint_16 = OpConstant %uint 16
        %174 = OpTypeImage %float 2D 0 0 0 2 Rgba8
%_ptr_UniformConstant_174 = OpTypePointer UniformConstant %174
 %background = OpVariable %_ptr_UniformConstant_174 UniformConstant
 %foreground = OpVariable %_ptr_UniformConstant_174 UniformConstant
   %uint_512 = OpConstant %uint 512
    %uint_47 = OpConstant %uint 47
%_ptr_Function_bool = OpTypePointer Function %bool
     %int_11 = OpConstant %int 11
     %int_10 = OpConstant %int 10
      %int_9 = OpConstant %int 9
     %uint_7 = OpConstant %uint 7
    %uint_38 = OpConstant %uint 38
   %uint_240 = OpConstant %uint 240
     %v4bool = OpTypeVector %bool 4
  %uint_3400 = OpConstant %uint 3400
   %uint_264 = OpConstant %uint 264
%_ptr_Input_uint = OpTypePointer Input %uint
%gl_LocalInvocationIndex = OpVariable %_ptr_Input_uint Input
%gl_WorkGroupSize = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_1
       %main = OpFunction %void None %117
        %189 = OpLabel
   %offset_1 = OpVariable %_ptr_Function_v2uint Function
    %param_8 = OpVariable %_ptr_Function_uint Function
    %param_9 = OpVariable %_ptr_Function_uint Function
        %x_0 = OpVariable %_ptr_Function_uint Function
   %param_10 = OpVariable %_ptr_Function_uint Function
          %y = OpVariable %_ptr_Function_uint Function
   %param_11 = OpVariable %_ptr_Function_uint Function
     %coords = OpVariable %_ptr_Function_v2int Function
      %pixel = OpVariable %_ptr_Function_uint Function
   %param_12 = OpVariable %_ptr_Function_uint Function
   %colour_0 = OpVariable %_ptr_Function_v4float Function
   %param_13 = OpVariable %_ptr_Function_uint Function
   %param_14 = OpVariable %_ptr_Function_uint Function
   %param_15 = OpVariable %_ptr_Function_uint Function
     %sprite = OpVariable %_ptr_Function_uint Function
   %param_16 = OpVariable %_ptr_Function_uint Function
%sprite_low_2 = OpVariable %_ptr_Function_uint Function
%mode_is_2bpp = OpVariable %_ptr_Function_bool Function
%layer_is_foreground = OpVariable %_ptr_Function_bool Function
        %x_1 = OpVariable %_ptr_Function_uint Function
   %param_17 = OpVariable %_ptr_Function_uint Function
        %y_0 = OpVariable %_ptr_Function_uint Function
   %param_18 = OpVariable %_ptr_Function_uint Function
  %y_flipped = OpVariable %_ptr_Function_bool Function
  %x_flipped = OpVariable %_ptr_Function_bool Function
   %coords_0 = OpVariable %_ptr_Function_v2int Function
        %190 = OpVariable %_ptr_Function_uint Function
        %191 = OpVariable %_ptr_Function_uint Function
  %auto_byte = OpVariable %_ptr_Function_uint Function
   %param_19 = OpVariable %_ptr_Function_uint Function
%auto_length = OpVariable %_ptr_Function_uint Function
  %auto_xy_1 = OpVariable %_ptr_Function_v2int Function
        %192 = OpVariable %_ptr_Function_int Function
        %193 = OpVariable %_ptr_Function_int Function
  %auto_addr = OpVariable %_ptr_Function_bool Function
          %i = OpVariable %_ptr_Function_int Function
          %o = OpVariable %_ptr_Function_v2int Function
   %v_colour = OpVariable %_ptr_Function_v4float Function
        %194 = OpVariable %_ptr_Function_v4float Function
   %param_20 = OpVariable %_ptr_Function_uint Function
   %param_21 = OpVariable %_ptr_Function_v2uint Function
   %param_22 = OpVariable %_ptr_Function_v2int Function
   %param_23 = OpVariable %_ptr_Function_int Function
   %param_24 = OpVariable %_ptr_Function_uint Function
   %param_25 = OpVariable %_ptr_Function_v2uint Function
   %param_26 = OpVariable %_ptr_Function_v2int Function
   %param_27 = OpVariable %_ptr_Function_int Function
   %param_28 = OpVariable %_ptr_Function_uint Function
   %param_29 = OpVariable %_ptr_Function_uint Function
   %param_30 = OpVariable %_ptr_Function_uint Function
   %param_31 = OpVariable %_ptr_Function_uint Function
     %addr_4 = OpVariable %_ptr_Function_uint Function
   %param_32 = OpVariable %_ptr_Function_uint Function
          %s = OpVariable %_ptr_Function_uint Function
        %195 = OpVariable %_ptr_Function_int Function
   %param_33 = OpVariable %_ptr_Function_uint Function
   %param_34 = OpVariable %_ptr_Function_uint Function
        %196 = OpLoad %v3uint %gl_GlobalInvocationID
        %197 = OpCompositeExtract %uint %196 0
        %198 = OpCompositeExtract %uint %196 1
        %199 = OpCompositeConstruct %v2uint %197 %198
               OpStore %offset_1 %199
        %200 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_2
        %201 = OpLoad %uint %200
               OpStore %param_8 %201
               OpStore %param_9 %uint_256
        %202 = OpFunctionCall %bool %mask_u1_u1_ %param_8 %param_9
        %203 = OpLoad %v2uint %offset_1
        %204 = OpIEqual %v2bool %203 %167
        %205 = OpAll %bool %204
        %206 = OpLogicalAnd %bool %202 %205
               OpSelectionMerge %207 None
               OpBranchConditional %206 %208 %207
        %208 = OpLabel
               OpStore %param_10 %uint_40
        %209 = OpFunctionCall %uint %get_short_u1_ %param_10
               OpStore %x_0 %209
               OpStore %param_11 %uint_42
        %210 = OpFunctionCall %uint %get_short_u1_ %param_11
               OpStore %y %210
        %211 = OpLoad %uint %x_0
        %212 = OpBitcast %int %211
        %213 = OpLoad %uint %y
        %214 = OpBitcast %int %213
        %215 = OpCompositeConstruct %v2int %212 %214
               OpStore %coords %215
               OpStore %param_12 %uint_46
        %216 = OpFunctionCall %uint %get_byte_u1_ %param_12
               OpStore %pixel %216
        %217 = OpLoad %uint %pixel
        %218 = OpBitwiseAnd %uint %217 %uint_15
               OpStore %param_13 %218
        %219 = OpFunctionCall %v4float %get_colour_u1_ %param_13
               OpStore %colour_0 %219
        %220 = OpLoad %uint %pixel
        %221 = OpUDiv %uint %220 %uint_16
        %222 = OpIEqual %bool %221 %uint_0
               OpSelectionMerge %223 None
               OpBranchConditional %222 %224 %223
        %224 = OpLabel
        %225 = OpLoad %174 %background
        %226 = OpLoad %v2int %coords
        %227 = OpLoad %v4float %colour_0
               OpImageWrite %225 %226 %227
               OpBranch %223
        %223 = OpLabel
        %228 = OpLoad %uint %pixel
        %229 = OpUDiv %uint %228 %uint_16
        %230 = OpIEqual %bool %229 %uint_4
               OpSelectionMerge %231 None
               OpBranchConditional %230 %232 %231
        %232 = OpLabel
        %233 = OpLoad %174 %foreground
        %234 = OpLoad %v2int %coords
        %235 = OpLoad %v4float %colour_0
               OpImageWrite %233 %234 %235
               OpBranch %231
        %231 = OpLabel
               OpBranch %207
        %207 = OpLabel
        %236 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_2
        %237 = OpLoad %uint %236
               OpStore %param_14 %237
               OpStore %param_15 %uint_512
        %238 = OpFunctionCall %bool %mask_u1_u1_ %param_14 %param_15
               OpSelectionMerge %239 None
               OpBranchConditional %238 %240 %239
        %240 = OpLabel
               OpStore %param_16 %uint_47
        %241 = OpFunctionCall %uint %get_byte_u1_ %param_16
               OpStore %sprite %241
        %242 = OpLoad %uint %sprite
        %243 = OpBitwiseAnd %uint %242 %uint_15
               OpStore %sprite_low_2 %243
        %244 = OpLoad %uint %sprite
        %245 = OpShiftRightLogical %uint %244 %int_11
        %246 = OpBitwiseAnd %uint %245 %uint_1
        %247 = OpINotEqual %bool %246 %uint_0
               OpStore %mode_is_2bpp %247
        %248 = OpLoad %uint %sprite
        %249 = OpShiftRightLogical %uint %248 %int_10
        %250 = OpBitwiseAnd %uint %249 %uint_1
        %251 = OpINotEqual %bool %250 %uint_0
               OpStore %layer_is_foreground %251
               OpStore %param_17 %uint_40
        %252 = OpFunctionCall %uint %get_short_u1_ %param_17
               OpStore %x_1 %252
               OpStore %param_18 %uint_42
        %253 = OpFunctionCall %uint %get_short_u1_ %param_18
               OpStore %y_0 %253
        %254 = OpLoad %uint %sprite
        %255 = OpShiftRightLogical %uint %254 %int_9
        %256 = OpBitwiseAnd %uint %255 %uint_1
        %257 = OpIEqual %bool %256 %uint_1
               OpStore %y_flipped %257
        %258 = OpLoad %uint %sprite
        %259 = OpShiftRightLogical %uint %258 %int_8
        %260 = OpBitwiseAnd %uint %259 %uint_1
        %261 = OpIEqual %bool %260 %uint_1
               OpStore %x_flipped %261
        %262 = OpLoad %uint %x_1
        %263 = OpLoad %bool %x_flipped
               OpSelectionMerge %264 None
               OpBranchConditional %263 %265 %266
        %265 = OpLabel
        %267 = OpAccessChain %_ptr_Function_uint %offset_1 %uint_0
        %268 = OpLoad %uint %267
               OpStore %190 %268
               OpBranch %264
        %266 = OpLabel
        %269 = OpAccessChain %_ptr_Function_uint %offset_1 %uint_0
        %270 = OpLoad %uint %269
        %271 = OpISub %uint %uint_7 %270
               OpStore %190 %271
               OpBranch %264
        %264 = OpLabel
        %272 = OpLoad %uint %190
        %273 = OpIAdd %uint %262 %272
        %274 = OpBitcast %int %273
        %275 = OpAccessChain %_ptr_Function_int %coords_0 %uint_0
               OpStore %275 %274
        %276 = OpLoad %uint %y_0
        %277 = OpLoad %bool %y_flipped
               OpSelectionMerge %278 None
               OpBranchConditional %277 %279 %280
        %279 = OpLabel
        %281 = OpAccessChain %_ptr_Function_uint %offset_1 %uint_1
        %282 = OpLoad %uint %281
        %283 = OpISub %uint %uint_7 %282
               OpStore %191 %283
               OpBranch %278
        %280 = OpLabel
        %284 = OpAccessChain %_ptr_Function_uint %offset_1 %uint_1
        %285 = OpLoad %uint %284
               OpStore %191 %285
               OpBranch %278
        %278 = OpLabel
        %286 = OpLoad %uint %191
        %287 = OpIAdd %uint %276 %286
        %288 = OpBitcast %int %287
        %289 = OpAccessChain %_ptr_Function_int %coords_0 %uint_1
               OpStore %289 %288
               OpStore %param_19 %uint_38
        %290 = OpFunctionCall %uint %get_byte_u1_ %param_19
               OpStore %auto_byte %290
        %291 = OpLoad %uint %auto_byte
        %292 = OpBitwiseAnd %uint %291 %uint_240
        %293 = OpUDiv %uint %292 %uint_16
        %294 = OpIAdd %uint %293 %uint_1
               OpStore %auto_length %294
        %295 = OpLoad %uint %auto_byte
        %296 = OpBitwiseAnd %uint %295 %uint_1
        %297 = OpBitcast %int %296
        %298 = OpLoad %uint %auto_byte
        %299 = OpShiftRightLogical %uint %298 %int_1
        %300 = OpBitwiseAnd %uint %299 %uint_1
        %301 = OpBitcast %int %300
        %302 = OpCompositeConstruct %v2int %297 %301
               OpStore %auto_xy_1 %302
        %303 = OpLoad %bool %x_flipped
               OpSelectionMerge %304 None
               OpBranchConditional %303 %305 %306
        %305 = OpLabel
        %307 = OpAccessChain %_ptr_Function_int %auto_xy_1 %uint_0
        %308 = OpLoad %int %307
        %309 = OpSNegate %int %308
               OpStore %192 %309
               OpBranch %304
        %306 = OpLabel
        %310 = OpAccessChain %_ptr_Function_int %auto_xy_1 %uint_0
        %311 = OpLoad %int %310
               OpStore %192 %311
               OpBranch %304
        %304 = OpLabel
        %312 = OpLoad %int %192
        %313 = OpAccessChain %_ptr_Function_int %auto_xy_1 %uint_0
               OpStore %313 %312
        %314 = OpLoad %bool %y_flipped
               OpSelectionMerge %315 None
               OpBranchConditional %314 %316 %317
        %316 = OpLabel
        %318 = OpAccessChain %_ptr_Function_int %auto_xy_1 %uint_1
        %319 = OpLoad %int %318
        %320 = OpSNegate %int %319
               OpStore %193 %320
               OpBranch %315
        %317 = OpLabel
        %321 = OpAccessChain %_ptr_Function_int %auto_xy_1 %uint_1
        %322 = OpLoad %int %321
               OpStore %193 %322
               OpBranch %315
        %315 = OpLabel
        %323 = OpLoad %int %193
        %324 = OpAccessChain %_ptr_Function_int %auto_xy_1 %uint_1
               OpStore %324 %323
        %325 = OpLoad %uint %auto_byte
        %326 = OpShiftRightLogical %uint %325 %int_2
        %327 = OpBitwiseAnd %uint %326 %uint_1
        %328 = OpINotEqual %bool %327 %uint_0
               OpStore %auto_addr %328
               OpStore %i %int_0
               OpBranch %329
        %329 = OpLabel
               OpLoopMerge %330 %331 None
               OpBranch %332
        %332 = OpLabel
        %333 = OpLoad %int %i
        %334 = OpBitcast %uint %333
        %335 = OpLoad %uint %auto_length
        %336 = OpULessThan %bool %334 %335
               OpBranchConditional %336 %337 %330
        %337 = OpLabel
        %338 = OpLoad %int %i
        %339 = OpIMul %int %338 %int_8
        %340 = OpLoad %v2int %auto_xy_1
        %341 = OpVectorShuffle %v2int %340 %340 1 0
        %342 = OpCompositeConstruct %v2int %339 %339
        %343 = OpIMul %v2int %342 %341
               OpStore %o %343
        %344 = OpLoad %bool %mode_is_2bpp
               OpSelectionMerge %345 None
               OpBranchConditional %344 %346 %347
        %346 = OpLabel
        %348 = OpLoad %bool %auto_addr
        %349 = OpLoad %int %i
        %350 = OpSelect %int %348 %349 %int_0
        %351 = OpLoad %uint %sprite_low_2
               OpStore %param_20 %351
        %352 = OpLoad %v2uint %offset_1
               OpStore %param_21 %352
        %353 = OpLoad %v2int %auto_xy_1
               OpStore %param_22 %353
               OpStore %param_23 %350
        %354 = OpFunctionCall %v4float %colour_2bpp_u1_vu2_vi2_i1_ %param_20 %param_21 %param_22 %param_23
               OpStore %194 %354
               OpBranch %345
        %347 = OpLabel
        %355 = OpLoad %bool %auto_addr
        %356 = OpLoad %int %i
        %357 = OpSelect %int %355 %356 %int_0
        %358 = OpLoad %uint %sprite_low_2
               OpStore %param_24 %358
        %359 = OpLoad %v2uint %offset_1
               OpStore %param_25 %359
        %360 = OpLoad %v2int %auto_xy_1
               OpStore %param_26 %360
               OpStore %param_27 %357
        %361 = OpFunctionCall %v4float %colour_1bpp_u1_vu2_vi2_i1_ %param_24 %param_25 %param_26 %param_27
               OpStore %194 %361
               OpBranch %345
        %345 = OpLabel
        %362 = OpLoad %v4float %194
               OpStore %v_colour %362
        %363 = OpLoad %v4float %v_colour
        %364 = OpFOrdEqual %v4bool %363 %165
        %365 = OpAll %bool %364
               OpSelectionMerge %366 None
               OpBranchConditional %365 %367 %366
        %367 = OpLabel
               OpBranch %331
        %366 = OpLabel
        %368 = OpLoad %bool %layer_is_foreground
               OpSelectionMerge %369 None
               OpBranchConditional %368 %370 %371
        %370 = OpLabel
        %372 = OpLoad %174 %foreground
        %373 = OpLoad %v2int %coords_0
        %374 = OpLoad %v2int %o
        %375 = OpIAdd %v2int %373 %374
        %376 = OpLoad %v4float %v_colour
               OpImageWrite %372 %375 %376
               OpBranch %369
        %371 = OpLabel
        %377 = OpLoad %174 %background
        %378 = OpLoad %v2int %coords_0
        %379 = OpLoad %v2int %o
        %380 = OpIAdd %v2int %378 %379
        %381 = OpLoad %v4float %v_colour
               OpImageWrite %377 %380 %381
               OpBranch %369
        %369 = OpLabel
               OpBranch %331
        %331 = OpLabel
        %382 = OpLoad %int %i
        %383 = OpIAdd %int %382 %int_1
               OpStore %i %383
               OpBranch %329
        %330 = OpLabel
               OpMemoryBarrier %uint_1 %uint_3400
               OpControlBarrier %uint_2 %uint_2 %uint_264
        %384 = OpLoad %uint %gl_LocalInvocationIndex
        %385 = OpIEqual %bool %384 %uint_0
               OpSelectionMerge %386 None
               OpBranchConditional %385 %387 %386
        %387 = OpLabel
        %388 = OpLoad %uint %x_1
        %389 = OpAccessChain %_ptr_Function_int %auto_xy_1 %uint_0
        %390 = OpLoad %int %389
        %391 = OpIMul %int %390 %int_8
        %392 = OpBitcast %uint %391
        %393 = OpIAdd %uint %388 %392
               OpStore %param_28 %393
               OpStore %param_29 %uint_40
        %394 = OpFunctionCall %void %to_short_u1_u1_ %param_28 %param_29
        %395 = OpLoad %uint %y_0
        %396 = OpAccessChain %_ptr_Function_int %auto_xy_1 %uint_1
        %397 = OpLoad %int %396
        %398 = OpIMul %int %397 %int_8
        %399 = OpBitcast %uint %398
        %400 = OpIAdd %uint %395 %399
               OpStore %param_30 %400
               OpStore %param_31 %uint_42
        %401 = OpFunctionCall %void %to_short_u1_u1_ %param_30 %param_31
               OpStore %param_32 %uint_44
        %402 = OpFunctionCall %uint %get_short_u1_ %param_32
               OpStore %addr_4 %402
        %403 = OpLoad %bool %auto_addr
               OpSelectionMerge %404 None
               OpBranchConditional %403 %405 %406
        %405 = OpLabel
        %407 = OpLoad %bool %mode_is_2bpp
        %408 = OpSelect %int %407 %int_16 %int_8
               OpStore %195 %408
               OpBranch %404
        %406 = OpLabel
               OpStore %195 %int_0
               OpBranch %404
        %404 = OpLabel
        %409 = OpLoad %int %195
        %410 = OpBitcast %uint %409
               OpStore %s %410
        %411 = OpLoad %uint %addr_4
        %412 = OpLoad %uint %s
        %413 = OpLoad %uint %auto_length
        %414 = OpIMul %uint %412 %413
        %415 = OpIAdd %uint %411 %414
               OpStore %param_33 %415
               OpStore %param_34 %uint_44
        %416 = OpFunctionCall %void %to_short_u1_u1_ %param_33 %param_34
               OpBranch %386
        %386 = OpLabel
               OpBranch %239
        %239 = OpLabel
               OpReturn
               OpFunctionEnd
%get_byte_u1_ = OpFunction %uint None %120
       %addr = OpFunctionParameter %_ptr_Function_uint
        %417 = OpLabel
        %418 = OpLoad %uint %addr
        %419 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_1 %418
        %420 = OpLoad %uint %419
               OpReturnValue %420
               OpFunctionEnd
%get_short_u1_ = OpFunction %uint None %120
     %addr_0 = OpFunctionParameter %_ptr_Function_uint
        %421 = OpLabel
        %422 = OpLoad %uint %addr_0
        %423 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_1 %422
        %424 = OpLoad %uint %423
        %425 = OpShiftLeftLogical %uint %424 %int_8
        %426 = OpLoad %uint %addr_0
        %427 = OpIAdd %uint %426 %uint_1
        %428 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_1 %427
        %429 = OpLoad %uint %428
        %430 = OpBitwiseOr %uint %425 %429
               OpReturnValue %430
               OpFunctionEnd
%to_short_u1_u1_ = OpFunction %void None %121
          %v = OpFunctionParameter %_ptr_Function_uint
     %addr_1 = OpFunctionParameter %_ptr_Function_uint
        %431 = OpLabel
        %432 = OpLoad %uint %addr_1
        %433 = OpLoad %uint %v
        %434 = OpShiftRightLogical %uint %433 %int_8
        %435 = OpBitwiseAnd %uint %434 %uint_255
        %436 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_1 %432
               OpStore %436 %435
        %437 = OpLoad %uint %addr_1
        %438 = OpIAdd %uint %437 %uint_1
        %439 = OpLoad %uint %v
        %440 = OpBitwiseAnd %uint %439 %uint_255
        %441 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_1 %438
               OpStore %441 %440
               OpReturn
               OpFunctionEnd
%mask_u1_u1_ = OpFunction %bool None %123
          %x = OpFunctionParameter %_ptr_Function_uint
       %mask = OpFunctionParameter %_ptr_Function_uint
        %442 = OpLabel
        %443 = OpLoad %uint %x
        %444 = OpLoad %uint %mask
        %445 = OpBitwiseAnd %uint %443 %444
        %446 = OpLoad %uint %mask
        %447 = OpIEqual %bool %445 %446
               OpReturnValue %447
               OpFunctionEnd
%get_colour_u1_ = OpFunction %v4float None %126
   %colour_i = OpFunctionParameter %_ptr_Function_uint
        %448 = OpLabel
      %shift = OpVariable %_ptr_Function_uint Function
          %r = OpVariable %_ptr_Function_uint Function
      %param = OpVariable %_ptr_Function_uint Function
          %g = OpVariable %_ptr_Function_uint Function
    %param_0 = OpVariable %_ptr_Function_uint Function
          %b = OpVariable %_ptr_Function_uint Function
    %param_1 = OpVariable %_ptr_Function_uint Function
%sys_colours = OpVariable %_ptr_Function_v3uint Function
        %449 = OpLoad %uint %colour_i
        %450 = OpULessThan %bool %449 %uint_4
               OpSelectionMerge %451 None
               OpBranchConditional %450 %452 %451
        %452 = OpLabel
        %453 = OpLoad %uint %colour_i
        %454 = OpISub %uint %uint_3 %453
        %455 = OpIMul %uint %454 %uint_4
               OpStore %shift %455
               OpStore %param %uint_8
        %456 = OpFunctionCall %uint %get_short_u1_ %param
        %457 = OpLoad %uint %shift
        %458 = OpShiftRightLogical %uint %456 %457
        %459 = OpBitwiseAnd %uint %458 %uint_15
               OpStore %r %459
               OpStore %param_0 %uint_10
        %460 = OpFunctionCall %uint %get_short_u1_ %param_0
        %461 = OpLoad %uint %shift
        %462 = OpShiftRightLogical %uint %460 %461
        %463 = OpBitwiseAnd %uint %462 %uint_15
               OpStore %g %463
               OpStore %param_1 %uint_12
        %464 = OpFunctionCall %uint %get_short_u1_ %param_1
        %465 = OpLoad %uint %shift
        %466 = OpShiftRightLogical %uint %464 %465
        %467 = OpBitwiseAnd %uint %466 %uint_15
               OpStore %b %467
        %468 = OpLoad %uint %r
        %469 = OpLoad %uint %g
        %470 = OpLoad %uint %b
        %471 = OpCompositeConstruct %v3uint %468 %469 %470
               OpStore %sys_colours %471
        %472 = OpLoad %v3uint %sys_colours
        %473 = OpConvertUToF %v3float %472
        %474 = OpCompositeConstruct %v3float %float_16 %float_16 %float_16
        %475 = OpFDiv %v3float %473 %474
        %476 = OpCompositeExtract %float %475 0
        %477 = OpCompositeExtract %float %475 1
        %478 = OpCompositeExtract %float %475 2
        %479 = OpCompositeConstruct %v4float %476 %477 %478 %float_1
               OpReturnValue %479
        %451 = OpLabel
               OpReturnValue %154
               OpFunctionEnd
%get_2bpp_colour_i_u1_u1_ = OpFunction %uint None %127
 %sprite_low = OpFunctionParameter %_ptr_Function_uint
      %value = OpFunctionParameter %_ptr_Function_uint
        %480 = OpLabel
%base_colour = OpVariable %_ptr_Function_uint Function
 %mix_colour = OpVariable %_ptr_Function_uint Function
        %481 = OpVariable %_ptr_Function_uint Function
        %482 = OpVariable %_ptr_Function_uint Function
        %483 = OpLoad %uint %value
        %484 = OpUGreaterThan %bool %483 %uint_3
               OpSelectionMerge %485 None
               OpBranchConditional %484 %486 %485
        %486 = OpLabel
               OpReturnValue %uint_4294967295
        %485 = OpLabel
        %487 = OpLoad %uint %sprite_low
        %488 = OpShiftRightLogical %uint %487 %int_2
        %489 = OpBitwiseAnd %uint %488 %uint_3
               OpStore %base_colour %489
        %490 = OpLoad %uint %sprite_low
        %491 = OpBitwiseAnd %uint %490 %uint_3
               OpStore %mix_colour %491
        %492 = OpLoad %uint %value
        %493 = OpIEqual %bool %492 %uint_0
               OpSelectionMerge %494 None
               OpBranchConditional %493 %495 %494
        %495 = OpLabel
        %496 = OpLoad %uint %sprite_low
        %497 = OpIEqual %bool %496 %uint_5
        %498 = OpLoad %uint %sprite_low
        %499 = OpIEqual %bool %498 %uint_10
        %500 = OpLogicalOr %bool %497 %499
        %501 = OpLoad %uint %sprite_low
        %502 = OpIEqual %bool %501 %uint_15
        %503 = OpLogicalOr %bool %500 %502
               OpBranch %494
        %494 = OpLabel
        %504 = OpPhi %bool %493 %485 %503 %495
               OpSelectionMerge %505 None
               OpBranchConditional %504 %506 %505
        %506 = OpLabel
               OpReturnValue %uint_4
        %505 = OpLabel
        %507 = OpLoad %uint %value
               OpSelectionMerge %508 None
               OpSwitch %507 %508 0 %509 1 %510 2 %511 3 %512
        %509 = OpLabel
        %513 = OpLoad %uint %base_colour
               OpReturnValue %513
        %510 = OpLabel
        %514 = OpLoad %uint %mix_colour
               OpReturnValue %514
        %511 = OpLabel
        %515 = OpLoad %uint %mix_colour
        %516 = OpIEqual %bool %515 %uint_0
               OpSelectionMerge %517 None
               OpBranchConditional %516 %518 %519
        %518 = OpLabel
        %520 = OpLoad %uint %base_colour
        %521 = OpIAdd %uint %520 %uint_1
        %522 = OpUMod %uint %521 %uint_4
               OpStore %481 %522
               OpBranch %517
        %519 = OpLabel
        %523 = OpLoad %uint %mix_colour
        %524 = OpIAdd %uint %523 %uint_1
        %525 = OpUMod %uint %524 %uint_4
               OpStore %481 %525
               OpBranch %517
        %517 = OpLabel
        %526 = OpLoad %uint %481
               OpReturnValue %526
        %512 = OpLabel
        %527 = OpLoad %uint %mix_colour
        %528 = OpIEqual %bool %527 %uint_0
               OpSelectionMerge %529 None
               OpBranchConditional %528 %530 %531
        %530 = OpLabel
        %532 = OpLoad %uint %base_colour
        %533 = OpIAdd %uint %532 %uint_2
        %534 = OpUMod %uint %533 %uint_4
               OpStore %482 %534
               OpBranch %529
        %531 = OpLabel
        %535 = OpLoad %uint %mix_colour
        %536 = OpIAdd %uint %535 %uint_2
        %537 = OpUMod %uint %536 %uint_4
               OpStore %482 %537
               OpBranch %529
        %529 = OpLabel
        %538 = OpLoad %uint %482
               OpReturnValue %538
        %508 = OpLabel
               OpReturnValue %uint_4
               OpFunctionEnd
%colour_2bpp_u1_vu2_vi2_i1_ = OpFunction %v4float None %134
%sprite_low_0 = OpFunctionParameter %_ptr_Function_uint
     %offset = OpFunctionParameter %_ptr_Function_v2uint
    %auto_xy = OpFunctionParameter %_ptr_Function_v2int
     %auto_i = OpFunctionParameter %_ptr_Function_int
        %539 = OpLabel
     %addr_2 = OpVariable %_ptr_Function_uint Function
    %param_2 = OpVariable %_ptr_Function_uint Function
        %row = OpVariable %_ptr_Function_uint Function
%draw_colour = OpVariable %_ptr_Function_uint Function
 %colour_i_0 = OpVariable %_ptr_Function_uint Function
    %param_3 = OpVariable %_ptr_Function_uint Function
    %param_4 = OpVariable %_ptr_Function_uint Function
    %param_5 = OpVariable %_ptr_Function_uint Function
               OpStore %param_2 %uint_44
        %540 = OpFunctionCall %uint %get_short_u1_ %param_2
        %541 = OpAccessChain %_ptr_Function_uint %offset %uint_1
        %542 = OpLoad %uint %541
        %543 = OpIMul %uint %542 %uint_2
        %544 = OpIAdd %uint %540 %543
        %545 = OpAccessChain %_ptr_Function_int %auto_xy %uint_1
        %546 = OpLoad %int %545
        %547 = OpLoad %int %auto_i
        %548 = OpIMul %int %546 %547
        %549 = OpIMul %int %548 %int_16
        %550 = OpBitcast %uint %549
        %551 = OpIAdd %uint %544 %550
               OpStore %addr_2 %551
        %552 = OpLoad %uint %addr_2
        %553 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_0 %552
        %554 = OpLoad %uint %553
               OpStore %row %554
        %555 = OpLoad %uint %row
        %556 = OpAccessChain %_ptr_Function_uint %offset %uint_0
        %557 = OpLoad %uint %556
        %558 = OpIMul %uint %557 %uint_2
        %559 = OpShiftRightLogical %uint %555 %558
        %560 = OpBitwiseAnd %uint %559 %uint_3
               OpStore %draw_colour %560
        %561 = OpLoad %uint %sprite_low_0
               OpStore %param_3 %561
        %562 = OpLoad %uint %draw_colour
               OpStore %param_4 %562
        %563 = OpFunctionCall %uint %get_2bpp_colour_i_u1_u1_ %param_3 %param_4
               OpStore %colour_i_0 %563
        %564 = OpLoad %uint %colour_i_0
        %565 = OpUGreaterThan %bool %564 %uint_3
               OpSelectionMerge %566 None
               OpBranchConditional %565 %567 %566
        %567 = OpLabel
               OpReturnValue %165
        %566 = OpLabel
        %568 = OpLoad %uint %colour_i_0
               OpStore %param_5 %568
        %569 = OpFunctionCall %v4float %get_colour_u1_ %param_5
               OpReturnValue %569
               OpFunctionEnd
%colour_1bpp_u1_vu2_vi2_i1_ = OpFunction %v4float None %134
%sprite_low_1 = OpFunctionParameter %_ptr_Function_uint
   %offset_0 = OpFunctionParameter %_ptr_Function_v2uint
  %auto_xy_0 = OpFunctionParameter %_ptr_Function_v2int
   %auto_i_0 = OpFunctionParameter %_ptr_Function_int
        %570 = OpLabel
     %addr_3 = OpVariable %_ptr_Function_uint Function
    %param_6 = OpVariable %_ptr_Function_uint Function
      %row_0 = OpVariable %_ptr_Function_uint Function
%draw_colour_0 = OpVariable %_ptr_Function_uint Function
     %colour = OpVariable %_ptr_Function_uint Function
    %param_7 = OpVariable %_ptr_Function_uint Function
               OpStore %param_6 %uint_44
        %571 = OpFunctionCall %uint %get_short_u1_ %param_6
        %572 = OpAccessChain %_ptr_Function_uint %offset_0 %uint_1
        %573 = OpLoad %uint %572
        %574 = OpIAdd %uint %571 %573
        %575 = OpAccessChain %_ptr_Function_int %auto_xy_0 %uint_1
        %576 = OpLoad %int %575
        %577 = OpLoad %int %auto_i_0
        %578 = OpIMul %int %576 %577
        %579 = OpIMul %int %578 %int_8
        %580 = OpBitcast %uint %579
        %581 = OpIAdd %uint %574 %580
               OpStore %addr_3 %581
        %582 = OpLoad %uint %addr_3
        %583 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_0 %582
        %584 = OpLoad %uint %583
               OpStore %row_0 %584
        %585 = OpLoad %uint %row_0
        %586 = OpAccessChain %_ptr_Function_uint %offset_0 %uint_0
        %587 = OpLoad %uint %586
        %588 = OpShiftRightLogical %uint %585 %587
        %589 = OpBitwiseAnd %uint %588 %uint_1
               OpStore %draw_colour_0 %589
        %590 = OpLoad %uint %draw_colour_0
        %591 = OpINotEqual %bool %590 %uint_0
        %592 = OpLoad %uint %sprite_low_1
        %593 = OpIEqual %bool %592 %uint_0
        %594 = OpLogicalAnd %bool %591 %593
               OpSelectionMerge %595 None
               OpBranchConditional %594 %596 %597
        %596 = OpLabel
               OpReturnValue %165
        %597 = OpLabel
        %598 = OpLoad %uint %draw_colour_0
        %599 = OpIEqual %bool %598 %uint_0
               OpSelectionMerge %600 None
               OpBranchConditional %599 %601 %600
        %601 = OpLabel
        %602 = OpLoad %uint %sprite_low_1
        %603 = OpIEqual %bool %602 %uint_0
        %604 = OpLoad %uint %sprite_low_1
        %605 = OpIEqual %bool %604 %uint_5
        %606 = OpLogicalOr %bool %603 %605
        %607 = OpLoad %uint %sprite_low_1
        %608 = OpIEqual %bool %607 %uint_10
        %609 = OpLogicalOr %bool %606 %608
        %610 = OpLoad %uint %sprite_low_1
        %611 = OpIEqual %bool %610 %uint_15
        %612 = OpLogicalOr %bool %609 %611
               OpBranch %600
        %600 = OpLabel
        %613 = OpPhi %bool %599 %597 %612 %601
               OpSelectionMerge %614 None
               OpBranchConditional %613 %615 %614
        %615 = OpLabel
               OpReturnValue %165
        %614 = OpLabel
               OpBranch %595
        %595 = OpLabel
        %616 = OpLoad %uint %sprite_low_1
        %617 = OpLoad %uint %draw_colour_0
        %618 = OpISub %uint %uint_1 %617
        %619 = OpIMul %uint %uint_2 %618
        %620 = OpShiftRightLogical %uint %616 %619
        %621 = OpBitwiseAnd %uint %620 %uint_3
               OpStore %colour %621
        %622 = OpLoad %uint %colour
               OpStore %param_7 %622
        %623 = OpFunctionCall %v4float %get_colour_u1_ %param_7
               OpReturnValue %623
               OpFunctionEnd
