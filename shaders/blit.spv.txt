; SPIR-V
; Version: 1.5
; Generator: Khronos SPIR-V Tools Assembler; 0
; Bound: 431
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %shared_uxn %gl_GlobalInvocationID %background %foreground %uxn
               OpExecutionMode %main LocalSize 8 8 1
               OpSource GLSL 450
               OpName %main "main"
               OpName %get_byte_u1_ "get_byte(u1;"
               OpName %addr "addr"
               OpName %get_short_u1_ "get_short(u1;"
               OpName %addr_0 "addr"
               OpName %mask_u1_u1_ "mask(u1;u1;"
               OpName %x "x"
               OpName %mask "mask"
               OpName %get_colour_u1_ "get_colour(u1;"
               OpName %colour_i "colour_i"
               OpName %get_2bpp_colour_i_u1_u1_ "get_2bpp_colour_i(u1;u1;"
               OpName %sprite_low "sprite_low"
               OpName %value "value"
               OpName %Shared_UXN_Buffer "Shared_UXN_Buffer"
               OpMemberName %Shared_UXN_Buffer 0 "pc"
               OpMemberName %Shared_UXN_Buffer 1 "dev"
               OpMemberName %Shared_UXN_Buffer 2 "flags"
               OpName %shared_uxn "shared_uxn"
               OpName %shift "shift"
               OpName %r "r"
               OpName %param "param"
               OpName %g "g"
               OpName %param_0 "param"
               OpName %b "b"
               OpName %param_1 "param"
               OpName %sys_colours "sys_colours"
               OpName %base_colour "base_colour"
               OpName %mix_colour "mix_colour"
               OpName %param_2 "param"
               OpName %param_3 "param"
               OpName %gl_GlobalInvocationID "gl_GlobalInvocationID"
               OpName %x_0 "x"
               OpName %param_4 "param"
               OpName %y "y"
               OpName %param_5 "param"
               OpName %coords "coords"
               OpName %pixel "pixel"
               OpName %param_6 "param"
               OpName %colour "colour"
               OpName %param_7 "param"
               OpName %background "background"
               OpName %foreground "foreground"
               OpName %param_8 "param"
               OpName %param_9 "param"
               OpName %offset "offset"
               OpName %sprite "sprite"
               OpName %param_10 "param"
               OpName %sprite_low_0 "sprite_low"
               OpName %mode_is_2bpp "mode_is_2bpp"
               OpName %layer_is_foreground "layer_is_foreground"
               OpName %x_1 "x"
               OpName %param_11 "param"
               OpName %y_0 "y"
               OpName %param_12 "param"
               OpName %y_flipped "y_flipped"
               OpName %x_flipped "x_flipped"
               OpName %coords_0 "coords"
               OpName %row "row"
               OpName %Private_UXN_Buffer "Private_UXN_Buffer"
               OpMemberName %Private_UXN_Buffer 0 "ram"
               OpMemberName %Private_UXN_Buffer 1 "wst"
               OpMemberName %Private_UXN_Buffer 2 "pWst"
               OpMemberName %Private_UXN_Buffer 3 "rst"
               OpMemberName %Private_UXN_Buffer 4 "pRst"
               OpName %uxn "uxn"
               OpName %param_13 "param"
               OpName %draw_colour "draw_colour"
               OpName %colour_i_0 "colour_i"
               OpName %param_14 "param"
               OpName %param_15 "param"
               OpName %v_colour "v_colour"
               OpName %param_16 "param"
               OpName %row_0 "row"
               OpName %param_17 "param"
               OpName %draw_colour_0 "draw_colour"
               OpName %colour_0 "colour"
               OpName %param_18 "param"
               OpDecorate %_arr_uint_uint_256 ArrayStride 4
               OpMemberDecorate %Shared_UXN_Buffer 0 Offset 0
               OpMemberDecorate %Shared_UXN_Buffer 1 Offset 4
               OpMemberDecorate %Shared_UXN_Buffer 2 Offset 1028
               OpDecorate %Shared_UXN_Buffer Block
               OpDecorate %shared_uxn DescriptorSet 0
               OpDecorate %shared_uxn Binding 0
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %background DescriptorSet 1
               OpDecorate %background Binding 2
               OpDecorate %foreground DescriptorSet 1
               OpDecorate %foreground Binding 3
               OpDecorate %_arr_uint_uint_65536 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_0 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_1 ArrayStride 4
               OpMemberDecorate %Private_UXN_Buffer 0 Offset 0
               OpMemberDecorate %Private_UXN_Buffer 1 Offset 262144
               OpMemberDecorate %Private_UXN_Buffer 2 Offset 263168
               OpMemberDecorate %Private_UXN_Buffer 3 Offset 263172
               OpMemberDecorate %Private_UXN_Buffer 4 Offset 264196
               OpDecorate %Private_UXN_Buffer Block
               OpDecorate %uxn DescriptorSet 0
               OpDecorate %uxn Binding 1
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
       %void = OpTypeVoid
         %77 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
         %80 = OpTypeFunction %uint %_ptr_Function_uint
       %bool = OpTypeBool
         %82 = OpTypeFunction %bool %_ptr_Function_uint %_ptr_Function_uint
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
         %85 = OpTypeFunction %v4float %_ptr_Function_uint
         %86 = OpTypeFunction %uint %_ptr_Function_uint %_ptr_Function_uint
   %uint_256 = OpConstant %uint 256
%_arr_uint_uint_256 = OpTypeArray %uint %uint_256
%Shared_UXN_Buffer = OpTypeStruct %uint %_arr_uint_uint_256 %uint
%_ptr_StorageBuffer_Shared_UXN_Buffer = OpTypePointer StorageBuffer %Shared_UXN_Buffer
 %shared_uxn = OpVariable %_ptr_StorageBuffer_Shared_UXN_Buffer StorageBuffer
        %int = OpTypeInt 32 1
      %int_1 = OpConstant %int 1
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
      %int_8 = OpConstant %int 8
     %uint_1 = OpConstant %uint 1
     %uint_4 = OpConstant %uint 4
     %uint_3 = OpConstant %uint 3
     %uint_8 = OpConstant %uint 8
    %uint_15 = OpConstant %uint 15
    %uint_10 = OpConstant %uint 10
    %uint_12 = OpConstant %uint 12
     %v3uint = OpTypeVector %uint 3
%_ptr_Function_v3uint = OpTypePointer Function %v3uint
    %v3float = OpTypeVector %float 3
   %float_16 = OpConstant %float 16
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
        %106 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
%uint_4294967295 = OpConstant %uint 4294967295
      %int_2 = OpConstant %int 2
     %uint_0 = OpConstant %uint 0
     %uint_5 = OpConstant %uint 5
     %uint_2 = OpConstant %uint 2
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
     %v2uint = OpTypeVector %uint 2
    %v2float = OpTypeVector %float 2
        %115 = OpConstantComposite %v2float %float_0 %float_0
     %v2bool = OpTypeVector %bool 2
    %uint_40 = OpConstant %uint 40
    %uint_42 = OpConstant %uint 42
      %v2int = OpTypeVector %int 2
%_ptr_Function_v2int = OpTypePointer Function %v2int
    %uint_46 = OpConstant %uint 46
%_ptr_Function_v4float = OpTypePointer Function %v4float
    %uint_16 = OpConstant %uint 16
        %124 = OpTypeImage %float 2D 0 0 0 2 Rgba8
%_ptr_UniformConstant_124 = OpTypePointer UniformConstant %124
 %background = OpVariable %_ptr_UniformConstant_124 UniformConstant
 %foreground = OpVariable %_ptr_UniformConstant_124 UniformConstant
   %uint_512 = OpConstant %uint 512
%_ptr_Function_v2uint = OpTypePointer Function %v2uint
    %uint_47 = OpConstant %uint 47
     %int_11 = OpConstant %int 11
     %int_10 = OpConstant %int 10
      %int_9 = OpConstant %int 9
     %uint_7 = OpConstant %uint 7
%_ptr_Function_int = OpTypePointer Function %int
 %uint_65536 = OpConstant %uint 65536
%_arr_uint_uint_65536 = OpTypeArray %uint %uint_65536
%_arr_uint_uint_256_0 = OpTypeArray %uint %uint_256
%_arr_uint_uint_256_1 = OpTypeArray %uint %uint_256
%Private_UXN_Buffer = OpTypeStruct %_arr_uint_uint_65536 %_arr_uint_uint_256_0 %uint %_arr_uint_uint_256_1 %uint
%_ptr_StorageBuffer_Private_UXN_Buffer = OpTypePointer StorageBuffer %Private_UXN_Buffer
        %uxn = OpVariable %_ptr_StorageBuffer_Private_UXN_Buffer StorageBuffer
      %int_0 = OpConstant %int 0
    %uint_44 = OpConstant %uint 44
%gl_WorkGroupSize = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_1
       %main = OpFunction %void None %77
        %138 = OpLabel
    %param_2 = OpVariable %_ptr_Function_uint Function
    %param_3 = OpVariable %_ptr_Function_uint Function
        %x_0 = OpVariable %_ptr_Function_uint Function
    %param_4 = OpVariable %_ptr_Function_uint Function
          %y = OpVariable %_ptr_Function_uint Function
    %param_5 = OpVariable %_ptr_Function_uint Function
     %coords = OpVariable %_ptr_Function_v2int Function
      %pixel = OpVariable %_ptr_Function_uint Function
    %param_6 = OpVariable %_ptr_Function_uint Function
     %colour = OpVariable %_ptr_Function_v4float Function
    %param_7 = OpVariable %_ptr_Function_uint Function
    %param_8 = OpVariable %_ptr_Function_uint Function
    %param_9 = OpVariable %_ptr_Function_uint Function
     %offset = OpVariable %_ptr_Function_v2uint Function
     %sprite = OpVariable %_ptr_Function_uint Function
   %param_10 = OpVariable %_ptr_Function_uint Function
%sprite_low_0 = OpVariable %_ptr_Function_uint Function
%mode_is_2bpp = OpVariable %_ptr_Function_uint Function
%layer_is_foreground = OpVariable %_ptr_Function_uint Function
        %x_1 = OpVariable %_ptr_Function_uint Function
   %param_11 = OpVariable %_ptr_Function_uint Function
        %y_0 = OpVariable %_ptr_Function_uint Function
   %param_12 = OpVariable %_ptr_Function_uint Function
  %y_flipped = OpVariable %_ptr_Function_uint Function
  %x_flipped = OpVariable %_ptr_Function_uint Function
   %coords_0 = OpVariable %_ptr_Function_v2int Function
        %139 = OpVariable %_ptr_Function_uint Function
        %140 = OpVariable %_ptr_Function_uint Function
        %row = OpVariable %_ptr_Function_uint Function
   %param_13 = OpVariable %_ptr_Function_uint Function
%draw_colour = OpVariable %_ptr_Function_uint Function
 %colour_i_0 = OpVariable %_ptr_Function_uint Function
   %param_14 = OpVariable %_ptr_Function_uint Function
   %param_15 = OpVariable %_ptr_Function_uint Function
   %v_colour = OpVariable %_ptr_Function_v4float Function
   %param_16 = OpVariable %_ptr_Function_uint Function
      %row_0 = OpVariable %_ptr_Function_uint Function
   %param_17 = OpVariable %_ptr_Function_uint Function
%draw_colour_0 = OpVariable %_ptr_Function_uint Function
   %colour_0 = OpVariable %_ptr_Function_uint Function
   %param_18 = OpVariable %_ptr_Function_uint Function
        %141 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_2
        %142 = OpLoad %uint %141
               OpStore %param_2 %142
               OpStore %param_3 %uint_256
        %143 = OpFunctionCall %bool %mask_u1_u1_ %param_2 %param_3
               OpSelectionMerge %144 None
               OpBranchConditional %143 %145 %144
        %145 = OpLabel
        %146 = OpLoad %v3uint %gl_GlobalInvocationID
        %147 = OpVectorShuffle %v2uint %146 %146 0 1
        %148 = OpConvertUToF %v2float %147
        %149 = OpFOrdEqual %v2bool %148 %115
        %150 = OpAll %bool %149
               OpBranch %144
        %144 = OpLabel
        %151 = OpPhi %bool %143 %138 %150 %145
               OpSelectionMerge %152 None
               OpBranchConditional %151 %153 %152
        %153 = OpLabel
               OpStore %param_4 %uint_40
        %154 = OpFunctionCall %uint %get_short_u1_ %param_4
               OpStore %x_0 %154
               OpStore %param_5 %uint_42
        %155 = OpFunctionCall %uint %get_short_u1_ %param_5
               OpStore %y %155
        %156 = OpLoad %uint %x_0
        %157 = OpBitcast %int %156
        %158 = OpLoad %uint %y
        %159 = OpBitcast %int %158
        %160 = OpCompositeConstruct %v2int %157 %159
               OpStore %coords %160
               OpStore %param_6 %uint_46
        %161 = OpFunctionCall %uint %get_byte_u1_ %param_6
               OpStore %pixel %161
        %162 = OpLoad %uint %pixel
        %163 = OpBitwiseAnd %uint %162 %uint_15
               OpStore %param_7 %163
        %164 = OpFunctionCall %v4float %get_colour_u1_ %param_7
               OpStore %colour %164
        %165 = OpLoad %uint %pixel
        %166 = OpUDiv %uint %165 %uint_16
        %167 = OpIEqual %bool %166 %uint_0
               OpSelectionMerge %168 None
               OpBranchConditional %167 %169 %168
        %169 = OpLabel
        %170 = OpLoad %124 %background
        %171 = OpLoad %v2int %coords
        %172 = OpLoad %v4float %colour
               OpImageWrite %170 %171 %172
               OpBranch %168
        %168 = OpLabel
        %173 = OpLoad %uint %pixel
        %174 = OpUDiv %uint %173 %uint_16
        %175 = OpIEqual %bool %174 %uint_4
               OpSelectionMerge %176 None
               OpBranchConditional %175 %177 %176
        %177 = OpLabel
        %178 = OpLoad %124 %foreground
        %179 = OpLoad %v2int %coords
        %180 = OpLoad %v4float %colour
               OpImageWrite %178 %179 %180
               OpBranch %176
        %176 = OpLabel
               OpBranch %152
        %152 = OpLabel
        %181 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_2
        %182 = OpLoad %uint %181
               OpStore %param_8 %182
               OpStore %param_9 %uint_512
        %183 = OpFunctionCall %bool %mask_u1_u1_ %param_8 %param_9
               OpSelectionMerge %184 None
               OpBranchConditional %183 %185 %184
        %185 = OpLabel
        %186 = OpLoad %v3uint %gl_GlobalInvocationID
        %187 = OpCompositeExtract %uint %186 0
        %188 = OpCompositeExtract %uint %186 1
        %189 = OpCompositeConstruct %v2uint %187 %188
               OpStore %offset %189
               OpStore %param_10 %uint_47
        %190 = OpFunctionCall %uint %get_byte_u1_ %param_10
               OpStore %sprite %190
        %191 = OpLoad %uint %sprite
        %192 = OpBitwiseAnd %uint %191 %uint_15
               OpStore %sprite_low_0 %192
        %193 = OpLoad %uint %sprite
        %194 = OpShiftRightLogical %uint %193 %int_11
        %195 = OpBitwiseAnd %uint %194 %uint_1
               OpStore %mode_is_2bpp %195
        %196 = OpLoad %uint %sprite
        %197 = OpShiftRightLogical %uint %196 %int_10
        %198 = OpBitwiseAnd %uint %197 %uint_1
               OpStore %layer_is_foreground %198
               OpStore %param_11 %uint_40
        %199 = OpFunctionCall %uint %get_short_u1_ %param_11
               OpStore %x_1 %199
               OpStore %param_12 %uint_42
        %200 = OpFunctionCall %uint %get_short_u1_ %param_12
               OpStore %y_0 %200
        %201 = OpLoad %uint %sprite
        %202 = OpShiftRightLogical %uint %201 %int_9
        %203 = OpBitwiseAnd %uint %202 %uint_1
               OpStore %y_flipped %203
        %204 = OpLoad %uint %sprite
        %205 = OpShiftRightLogical %uint %204 %int_8
        %206 = OpBitwiseAnd %uint %205 %uint_1
               OpStore %x_flipped %206
        %207 = OpLoad %uint %x_1
        %208 = OpLoad %uint %x_flipped
        %209 = OpIEqual %bool %208 %uint_1
               OpSelectionMerge %210 None
               OpBranchConditional %209 %211 %212
        %211 = OpLabel
        %213 = OpAccessChain %_ptr_Function_uint %offset %uint_0
        %214 = OpLoad %uint %213
               OpStore %139 %214
               OpBranch %210
        %212 = OpLabel
        %215 = OpAccessChain %_ptr_Function_uint %offset %uint_0
        %216 = OpLoad %uint %215
        %217 = OpISub %uint %uint_7 %216
               OpStore %139 %217
               OpBranch %210
        %210 = OpLabel
        %218 = OpLoad %uint %139
        %219 = OpIAdd %uint %207 %218
        %220 = OpBitcast %int %219
        %221 = OpAccessChain %_ptr_Function_int %coords_0 %uint_0
               OpStore %221 %220
        %222 = OpLoad %uint %y_0
        %223 = OpLoad %uint %y_flipped
        %224 = OpIEqual %bool %223 %uint_1
               OpSelectionMerge %225 None
               OpBranchConditional %224 %226 %227
        %226 = OpLabel
        %228 = OpAccessChain %_ptr_Function_uint %offset %uint_1
        %229 = OpLoad %uint %228
        %230 = OpISub %uint %uint_7 %229
               OpStore %140 %230
               OpBranch %225
        %227 = OpLabel
        %231 = OpAccessChain %_ptr_Function_uint %offset %uint_1
        %232 = OpLoad %uint %231
               OpStore %140 %232
               OpBranch %225
        %225 = OpLabel
        %233 = OpLoad %uint %140
        %234 = OpIAdd %uint %222 %233
        %235 = OpBitcast %int %234
        %236 = OpAccessChain %_ptr_Function_int %coords_0 %uint_1
               OpStore %236 %235
        %237 = OpLoad %uint %mode_is_2bpp
        %238 = OpIEqual %bool %237 %uint_1
               OpSelectionMerge %239 None
               OpBranchConditional %238 %240 %241
        %240 = OpLabel
               OpStore %param_13 %uint_44
        %242 = OpFunctionCall %uint %get_short_u1_ %param_13
        %243 = OpAccessChain %_ptr_Function_uint %offset %uint_1
        %244 = OpLoad %uint %243
        %245 = OpIMul %uint %244 %uint_2
        %246 = OpIAdd %uint %242 %245
        %247 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_0 %246
        %248 = OpLoad %uint %247
               OpStore %row %248
        %249 = OpLoad %uint %row
        %250 = OpAccessChain %_ptr_Function_uint %offset %uint_0
        %251 = OpLoad %uint %250
        %252 = OpIMul %uint %251 %uint_2
        %253 = OpShiftRightLogical %uint %249 %252
        %254 = OpBitwiseAnd %uint %253 %uint_3
               OpStore %draw_colour %254
        %255 = OpLoad %uint %sprite_low_0
               OpStore %param_14 %255
        %256 = OpLoad %uint %draw_colour
               OpStore %param_15 %256
        %257 = OpFunctionCall %uint %get_2bpp_colour_i_u1_u1_ %param_14 %param_15
               OpStore %colour_i_0 %257
        %258 = OpLoad %uint %colour_i_0
        %259 = OpUGreaterThan %bool %258 %uint_3
               OpSelectionMerge %260 None
               OpBranchConditional %259 %261 %260
        %261 = OpLabel
               OpReturn
        %260 = OpLabel
        %262 = OpLoad %uint %colour_i_0
               OpStore %param_16 %262
        %263 = OpFunctionCall %v4float %get_colour_u1_ %param_16
               OpStore %v_colour %263
               OpBranch %239
        %241 = OpLabel
               OpStore %param_17 %uint_44
        %264 = OpFunctionCall %uint %get_short_u1_ %param_17
        %265 = OpAccessChain %_ptr_Function_uint %offset %uint_1
        %266 = OpLoad %uint %265
        %267 = OpIAdd %uint %264 %266
        %268 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_0 %267
        %269 = OpLoad %uint %268
               OpStore %row_0 %269
        %270 = OpLoad %uint %row_0
        %271 = OpAccessChain %_ptr_Function_uint %offset %uint_0
        %272 = OpLoad %uint %271
        %273 = OpShiftRightLogical %uint %270 %272
        %274 = OpBitwiseAnd %uint %273 %uint_1
               OpStore %draw_colour_0 %274
        %275 = OpLoad %uint %draw_colour_0
        %276 = OpINotEqual %bool %275 %uint_0
        %277 = OpLoad %uint %sprite_low_0
        %278 = OpIEqual %bool %277 %uint_0
        %279 = OpLogicalAnd %bool %276 %278
               OpSelectionMerge %280 None
               OpBranchConditional %279 %281 %282
        %281 = OpLabel
               OpReturn
        %282 = OpLabel
        %283 = OpLoad %uint %draw_colour_0
        %284 = OpIEqual %bool %283 %uint_0
               OpSelectionMerge %285 None
               OpBranchConditional %284 %286 %285
        %286 = OpLabel
        %287 = OpLoad %uint %sprite_low_0
        %288 = OpIEqual %bool %287 %uint_0
        %289 = OpLoad %uint %sprite_low_0
        %290 = OpIEqual %bool %289 %uint_5
        %291 = OpLogicalOr %bool %288 %290
        %292 = OpLoad %uint %sprite_low_0
        %293 = OpIEqual %bool %292 %uint_10
        %294 = OpLogicalOr %bool %291 %293
        %295 = OpLoad %uint %sprite_low_0
        %296 = OpIEqual %bool %295 %uint_15
        %297 = OpLogicalOr %bool %294 %296
               OpBranch %285
        %285 = OpLabel
        %298 = OpPhi %bool %284 %282 %297 %286
               OpSelectionMerge %299 None
               OpBranchConditional %298 %300 %299
        %300 = OpLabel
               OpReturn
        %299 = OpLabel
               OpBranch %280
        %280 = OpLabel
        %301 = OpLoad %uint %sprite_low_0
        %302 = OpLoad %uint %draw_colour_0
        %303 = OpISub %uint %uint_1 %302
        %304 = OpIMul %uint %uint_2 %303
        %305 = OpShiftRightLogical %uint %301 %304
        %306 = OpBitwiseAnd %uint %305 %uint_3
               OpStore %colour_0 %306
        %307 = OpLoad %uint %colour_0
               OpStore %param_18 %307
        %308 = OpFunctionCall %v4float %get_colour_u1_ %param_18
               OpStore %v_colour %308
               OpBranch %239
        %239 = OpLabel
        %309 = OpLoad %uint %layer_is_foreground
        %310 = OpIEqual %bool %309 %uint_1
               OpSelectionMerge %311 None
               OpBranchConditional %310 %312 %313
        %312 = OpLabel
        %314 = OpLoad %124 %foreground
        %315 = OpLoad %v2int %coords_0
        %316 = OpLoad %v4float %v_colour
               OpImageWrite %314 %315 %316
               OpBranch %311
        %313 = OpLabel
        %317 = OpLoad %124 %background
        %318 = OpLoad %v2int %coords_0
        %319 = OpLoad %v4float %v_colour
               OpImageWrite %317 %318 %319
               OpBranch %311
        %311 = OpLabel
               OpBranch %184
        %184 = OpLabel
               OpReturn
               OpFunctionEnd
%get_byte_u1_ = OpFunction %uint None %80
       %addr = OpFunctionParameter %_ptr_Function_uint
        %320 = OpLabel
        %321 = OpLoad %uint %addr
        %322 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_1 %321
        %323 = OpLoad %uint %322
               OpReturnValue %323
               OpFunctionEnd
%get_short_u1_ = OpFunction %uint None %80
     %addr_0 = OpFunctionParameter %_ptr_Function_uint
        %324 = OpLabel
        %325 = OpLoad %uint %addr_0
        %326 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_1 %325
        %327 = OpLoad %uint %326
        %328 = OpShiftLeftLogical %uint %327 %int_8
        %329 = OpLoad %uint %addr_0
        %330 = OpIAdd %uint %329 %uint_1
        %331 = OpAccessChain %_ptr_StorageBuffer_uint %shared_uxn %int_1 %330
        %332 = OpLoad %uint %331
        %333 = OpIAdd %uint %328 %332
               OpReturnValue %333
               OpFunctionEnd
%mask_u1_u1_ = OpFunction %bool None %82
          %x = OpFunctionParameter %_ptr_Function_uint
       %mask = OpFunctionParameter %_ptr_Function_uint
        %334 = OpLabel
        %335 = OpLoad %uint %x
        %336 = OpLoad %uint %mask
        %337 = OpBitwiseAnd %uint %335 %336
        %338 = OpLoad %uint %mask
        %339 = OpIEqual %bool %337 %338
               OpReturnValue %339
               OpFunctionEnd
%get_colour_u1_ = OpFunction %v4float None %85
   %colour_i = OpFunctionParameter %_ptr_Function_uint
        %340 = OpLabel
      %shift = OpVariable %_ptr_Function_uint Function
          %r = OpVariable %_ptr_Function_uint Function
      %param = OpVariable %_ptr_Function_uint Function
          %g = OpVariable %_ptr_Function_uint Function
    %param_0 = OpVariable %_ptr_Function_uint Function
          %b = OpVariable %_ptr_Function_uint Function
    %param_1 = OpVariable %_ptr_Function_uint Function
%sys_colours = OpVariable %_ptr_Function_v3uint Function
        %341 = OpLoad %uint %colour_i
        %342 = OpULessThan %bool %341 %uint_4
               OpSelectionMerge %343 None
               OpBranchConditional %342 %344 %343
        %344 = OpLabel
        %345 = OpLoad %uint %colour_i
        %346 = OpISub %uint %uint_3 %345
        %347 = OpIMul %uint %346 %uint_4
               OpStore %shift %347
               OpStore %param %uint_8
        %348 = OpFunctionCall %uint %get_short_u1_ %param
        %349 = OpLoad %uint %shift
        %350 = OpShiftRightLogical %uint %348 %349
        %351 = OpBitwiseAnd %uint %350 %uint_15
               OpStore %r %351
               OpStore %param_0 %uint_10
        %352 = OpFunctionCall %uint %get_short_u1_ %param_0
        %353 = OpLoad %uint %shift
        %354 = OpShiftRightLogical %uint %352 %353
        %355 = OpBitwiseAnd %uint %354 %uint_15
               OpStore %g %355
               OpStore %param_1 %uint_12
        %356 = OpFunctionCall %uint %get_short_u1_ %param_1
        %357 = OpLoad %uint %shift
        %358 = OpShiftRightLogical %uint %356 %357
        %359 = OpBitwiseAnd %uint %358 %uint_15
               OpStore %b %359
        %360 = OpLoad %uint %r
        %361 = OpLoad %uint %g
        %362 = OpLoad %uint %b
        %363 = OpCompositeConstruct %v3uint %360 %361 %362
               OpStore %sys_colours %363
        %364 = OpLoad %v3uint %sys_colours
        %365 = OpConvertUToF %v3float %364
        %366 = OpCompositeConstruct %v3float %float_16 %float_16 %float_16
        %367 = OpFDiv %v3float %365 %366
        %368 = OpCompositeExtract %float %367 0
        %369 = OpCompositeExtract %float %367 1
        %370 = OpCompositeExtract %float %367 2
        %371 = OpCompositeConstruct %v4float %368 %369 %370 %float_1
               OpReturnValue %371
        %343 = OpLabel
               OpReturnValue %106
               OpFunctionEnd
%get_2bpp_colour_i_u1_u1_ = OpFunction %uint None %86
 %sprite_low = OpFunctionParameter %_ptr_Function_uint
      %value = OpFunctionParameter %_ptr_Function_uint
        %372 = OpLabel
%base_colour = OpVariable %_ptr_Function_uint Function
 %mix_colour = OpVariable %_ptr_Function_uint Function
        %373 = OpVariable %_ptr_Function_uint Function
        %374 = OpVariable %_ptr_Function_uint Function
        %375 = OpLoad %uint %value
        %376 = OpUGreaterThan %bool %375 %uint_3
               OpSelectionMerge %377 None
               OpBranchConditional %376 %378 %377
        %378 = OpLabel
               OpReturnValue %uint_4294967295
        %377 = OpLabel
        %379 = OpLoad %uint %sprite_low
        %380 = OpShiftRightLogical %uint %379 %int_2
        %381 = OpBitwiseAnd %uint %380 %uint_3
               OpStore %base_colour %381
        %382 = OpLoad %uint %sprite_low
        %383 = OpBitwiseAnd %uint %382 %uint_3
               OpStore %mix_colour %383
        %384 = OpLoad %uint %value
        %385 = OpIEqual %bool %384 %uint_0
               OpSelectionMerge %386 None
               OpBranchConditional %385 %387 %386
        %387 = OpLabel
        %388 = OpLoad %uint %sprite_low
        %389 = OpIEqual %bool %388 %uint_5
        %390 = OpLoad %uint %sprite_low
        %391 = OpIEqual %bool %390 %uint_10
        %392 = OpLogicalOr %bool %389 %391
        %393 = OpLoad %uint %sprite_low
        %394 = OpIEqual %bool %393 %uint_15
        %395 = OpLogicalOr %bool %392 %394
               OpBranch %386
        %386 = OpLabel
        %396 = OpPhi %bool %385 %377 %395 %387
               OpSelectionMerge %397 None
               OpBranchConditional %396 %398 %397
        %398 = OpLabel
               OpReturnValue %uint_4
        %397 = OpLabel
        %399 = OpLoad %uint %value
               OpSelectionMerge %400 None
               OpSwitch %399 %400 0 %401 1 %402 2 %403 3 %404
        %401 = OpLabel
        %405 = OpLoad %uint %base_colour
               OpReturnValue %405
        %402 = OpLabel
        %406 = OpLoad %uint %mix_colour
               OpReturnValue %406
        %403 = OpLabel
        %407 = OpLoad %uint %mix_colour
        %408 = OpIEqual %bool %407 %uint_0
               OpSelectionMerge %409 None
               OpBranchConditional %408 %410 %411
        %410 = OpLabel
        %412 = OpLoad %uint %base_colour
        %413 = OpIAdd %uint %412 %uint_1
        %414 = OpUMod %uint %413 %uint_4
               OpStore %373 %414
               OpBranch %409
        %411 = OpLabel
        %415 = OpLoad %uint %mix_colour
        %416 = OpIAdd %uint %415 %uint_1
        %417 = OpUMod %uint %416 %uint_4
               OpStore %373 %417
               OpBranch %409
        %409 = OpLabel
        %418 = OpLoad %uint %373
               OpReturnValue %418
        %404 = OpLabel
        %419 = OpLoad %uint %mix_colour
        %420 = OpIEqual %bool %419 %uint_0
               OpSelectionMerge %421 None
               OpBranchConditional %420 %422 %423
        %422 = OpLabel
        %424 = OpLoad %uint %base_colour
        %425 = OpIAdd %uint %424 %uint_2
        %426 = OpUMod %uint %425 %uint_4
               OpStore %374 %426
               OpBranch %421
        %423 = OpLabel
        %427 = OpLoad %uint %mix_colour
        %428 = OpIAdd %uint %427 %uint_2
        %429 = OpUMod %uint %428 %uint_4
               OpStore %374 %429
               OpBranch %421
        %421 = OpLabel
        %430 = OpLoad %uint %374
               OpReturnValue %430
        %400 = OpLabel
               OpReturnValue %uint_4
               OpFunctionEnd
