; SPIR-V
; Version: 1.5
; Generator: Khronos SPIR-V Tools Assembler; 0
; Bound: 344
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %uxn %gl_GlobalInvocationID %background %foreground
               OpExecutionMode %main LocalSize 8 8 1
               OpSource GLSL 450
               OpName %main "main"
               OpName %get_byte_u1_ "get_byte(u1;"
               OpName %addr "addr"
               OpName %get_short_u1_ "get_short(u1;"
               OpName %addr_0 "addr"
               OpName %mask_u1_u1_ "mask(u1;u1;"
               OpName %x "x"
               OpName %mask "mask"
               OpName %get_colour_u1_ "get_colour(u1;"
               OpName %colour_i "colour_i"
               OpName %UXN_Buffer "UXN_Buffer"
               OpMemberName %UXN_Buffer 0 "pc"
               OpMemberName %UXN_Buffer 1 "ram"
               OpMemberName %UXN_Buffer 2 "wst"
               OpMemberName %UXN_Buffer 3 "pWst"
               OpMemberName %UXN_Buffer 4 "rst"
               OpMemberName %UXN_Buffer 5 "pRst"
               OpMemberName %UXN_Buffer 6 "dev"
               OpMemberName %UXN_Buffer 7 "deviceFlags"
               OpName %uxn "uxn"
               OpName %shift "shift"
               OpName %r "r"
               OpName %param "param"
               OpName %g "g"
               OpName %param_0 "param"
               OpName %b "b"
               OpName %param_1 "param"
               OpName %sys_colours "sys_colours"
               OpName %param_2 "param"
               OpName %param_3 "param"
               OpName %gl_GlobalInvocationID "gl_GlobalInvocationID"
               OpName %x_0 "x"
               OpName %param_4 "param"
               OpName %y "y"
               OpName %param_5 "param"
               OpName %coords "coords"
               OpName %pixel "pixel"
               OpName %param_6 "param"
               OpName %color "color"
               OpName %param_7 "param"
               OpName %background "background"
               OpName %foreground "foreground"
               OpName %param_8 "param"
               OpName %param_9 "param"
               OpName %row "row"
               OpName %param_10 "param"
               OpName %param_11 "param"
               OpName %sprite "sprite"
               OpName %param_12 "param"
               OpName %mode_is_2bpp "mode_is_2bpp"
               OpName %layer_is_foreground "layer_is_foreground"
               OpName %x_1 "x"
               OpName %param_13 "param"
               OpName %y_0 "y"
               OpName %param_14 "param"
               OpName %y_flipped "y_flipped"
               OpName %x_flipped "x_flipped"
               OpName %coords_0 "coords"
               OpName %draw_colour "draw_colour"
               OpName %sprite_low "sprite_low"
               OpName %colour_1 "colour_1"
               OpName %v_color_1 "v_color_1"
               OpName %param_15 "param"
               OpName %colour_0 "colour_0"
               OpName %v_color_0 "v_color_0"
               OpName %param_16 "param"
               OpDecorate %_arr_uint_uint_65536 ArrayStride 4
               OpDecorate %_arr_uint_uint_256 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_0 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_1 ArrayStride 4
               OpMemberDecorate %UXN_Buffer 0 Offset 0
               OpMemberDecorate %UXN_Buffer 1 Offset 4
               OpMemberDecorate %UXN_Buffer 2 Offset 262148
               OpMemberDecorate %UXN_Buffer 3 Offset 263172
               OpMemberDecorate %UXN_Buffer 4 Offset 263176
               OpMemberDecorate %UXN_Buffer 5 Offset 264200
               OpMemberDecorate %UXN_Buffer 6 Offset 264204
               OpMemberDecorate %UXN_Buffer 7 Offset 265228
               OpDecorate %UXN_Buffer Block
               OpDecorate %uxn DescriptorSet 0
               OpDecorate %uxn Binding 0
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %background DescriptorSet 0
               OpDecorate %background Binding 1
               OpDecorate %foreground DescriptorSet 0
               OpDecorate %foreground Binding 2
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
       %void = OpTypeVoid
         %66 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
         %69 = OpTypeFunction %uint %_ptr_Function_uint
       %bool = OpTypeBool
         %71 = OpTypeFunction %bool %_ptr_Function_uint %_ptr_Function_uint
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
         %74 = OpTypeFunction %v4float %_ptr_Function_uint
 %uint_65536 = OpConstant %uint 65536
%_arr_uint_uint_65536 = OpTypeArray %uint %uint_65536
   %uint_256 = OpConstant %uint 256
%_arr_uint_uint_256 = OpTypeArray %uint %uint_256
%_arr_uint_uint_256_0 = OpTypeArray %uint %uint_256
%_arr_uint_uint_256_1 = OpTypeArray %uint %uint_256
 %UXN_Buffer = OpTypeStruct %uint %_arr_uint_uint_65536 %_arr_uint_uint_256 %uint %_arr_uint_uint_256_0 %uint %_arr_uint_uint_256_1 %uint
%_ptr_StorageBuffer_UXN_Buffer = OpTypePointer StorageBuffer %UXN_Buffer
        %uxn = OpVariable %_ptr_StorageBuffer_UXN_Buffer StorageBuffer
        %int = OpTypeInt 32 1
      %int_6 = OpConstant %int 6
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
      %int_8 = OpConstant %int 8
     %uint_1 = OpConstant %uint 1
     %uint_4 = OpConstant %uint 4
     %uint_3 = OpConstant %uint 3
     %uint_8 = OpConstant %uint 8
    %uint_15 = OpConstant %uint 15
    %uint_10 = OpConstant %uint 10
    %uint_12 = OpConstant %uint 12
     %v3uint = OpTypeVector %uint 3
%_ptr_Function_v3uint = OpTypePointer Function %v3uint
    %v3float = OpTypeVector %float 3
   %float_16 = OpConstant %float 16
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %95 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
      %int_7 = OpConstant %int 7
    %uint_16 = OpConstant %uint 16
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
     %v2uint = OpTypeVector %uint 2
    %v2float = OpTypeVector %float 2
        %101 = OpConstantComposite %v2float %float_0 %float_0
     %v2bool = OpTypeVector %bool 2
    %uint_40 = OpConstant %uint 40
    %uint_42 = OpConstant %uint 42
      %v2int = OpTypeVector %int 2
%_ptr_Function_v2int = OpTypePointer Function %v2int
    %uint_46 = OpConstant %uint 46
%_ptr_Function_v4float = OpTypePointer Function %v4float
     %uint_0 = OpConstant %uint 0
        %110 = OpTypeImage %float 2D 0 0 0 2 Rgba8
%_ptr_UniformConstant_110 = OpTypePointer UniformConstant %110
 %background = OpVariable %_ptr_UniformConstant_110 UniformConstant
  %uint_4096 = OpConstant %uint 4096
 %foreground = OpVariable %_ptr_UniformConstant_110 UniformConstant
  %uint_8192 = OpConstant %uint 8192
    %uint_44 = OpConstant %uint 44
%_ptr_Input_uint = OpTypePointer Input %uint
    %uint_47 = OpConstant %uint 47
     %int_11 = OpConstant %int 11
     %int_10 = OpConstant %int 10
      %int_9 = OpConstant %int 9
%_ptr_Function_int = OpTypePointer Function %int
      %int_2 = OpConstant %int 2
     %uint_5 = OpConstant %uint 5
%gl_WorkGroupSize = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_1
       %main = OpFunction %void None %66
        %123 = OpLabel
    %param_2 = OpVariable %_ptr_Function_uint Function
    %param_3 = OpVariable %_ptr_Function_uint Function
        %x_0 = OpVariable %_ptr_Function_uint Function
    %param_4 = OpVariable %_ptr_Function_uint Function
          %y = OpVariable %_ptr_Function_uint Function
    %param_5 = OpVariable %_ptr_Function_uint Function
     %coords = OpVariable %_ptr_Function_v2int Function
      %pixel = OpVariable %_ptr_Function_uint Function
    %param_6 = OpVariable %_ptr_Function_uint Function
      %color = OpVariable %_ptr_Function_v4float Function
    %param_7 = OpVariable %_ptr_Function_uint Function
    %param_8 = OpVariable %_ptr_Function_uint Function
    %param_9 = OpVariable %_ptr_Function_uint Function
        %row = OpVariable %_ptr_Function_uint Function
   %param_10 = OpVariable %_ptr_Function_uint Function
   %param_11 = OpVariable %_ptr_Function_uint Function
     %sprite = OpVariable %_ptr_Function_uint Function
   %param_12 = OpVariable %_ptr_Function_uint Function
%mode_is_2bpp = OpVariable %_ptr_Function_uint Function
%layer_is_foreground = OpVariable %_ptr_Function_uint Function
        %x_1 = OpVariable %_ptr_Function_uint Function
   %param_13 = OpVariable %_ptr_Function_uint Function
        %y_0 = OpVariable %_ptr_Function_uint Function
   %param_14 = OpVariable %_ptr_Function_uint Function
  %y_flipped = OpVariable %_ptr_Function_uint Function
  %x_flipped = OpVariable %_ptr_Function_uint Function
   %coords_0 = OpVariable %_ptr_Function_v2int Function
%draw_colour = OpVariable %_ptr_Function_uint Function
 %sprite_low = OpVariable %_ptr_Function_uint Function
   %colour_1 = OpVariable %_ptr_Function_uint Function
  %v_color_1 = OpVariable %_ptr_Function_v4float Function
   %param_15 = OpVariable %_ptr_Function_uint Function
   %colour_0 = OpVariable %_ptr_Function_uint Function
  %v_color_0 = OpVariable %_ptr_Function_v4float Function
   %param_16 = OpVariable %_ptr_Function_uint Function
        %124 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %125 = OpLoad %uint %124
               OpStore %param_2 %125
               OpStore %param_3 %uint_16
        %126 = OpFunctionCall %bool %mask_u1_u1_ %param_2 %param_3
               OpSelectionMerge %127 None
               OpBranchConditional %126 %128 %127
        %128 = OpLabel
        %129 = OpLoad %v3uint %gl_GlobalInvocationID
        %130 = OpVectorShuffle %v2uint %129 %129 0 1
        %131 = OpConvertUToF %v2float %130
        %132 = OpFOrdEqual %v2bool %131 %101
        %133 = OpAll %bool %132
               OpBranch %127
        %127 = OpLabel
        %134 = OpPhi %bool %126 %123 %133 %128
               OpSelectionMerge %135 None
               OpBranchConditional %134 %136 %135
        %136 = OpLabel
               OpStore %param_4 %uint_40
        %137 = OpFunctionCall %uint %get_short_u1_ %param_4
               OpStore %x_0 %137
               OpStore %param_5 %uint_42
        %138 = OpFunctionCall %uint %get_short_u1_ %param_5
               OpStore %y %138
        %139 = OpLoad %uint %x_0
        %140 = OpBitcast %int %139
        %141 = OpLoad %uint %y
        %142 = OpBitcast %int %141
        %143 = OpCompositeConstruct %v2int %140 %142
               OpStore %coords %143
               OpStore %param_6 %uint_46
        %144 = OpFunctionCall %uint %get_byte_u1_ %param_6
               OpStore %pixel %144
        %145 = OpLoad %uint %pixel
        %146 = OpBitwiseAnd %uint %145 %uint_15
               OpStore %param_7 %146
        %147 = OpFunctionCall %v4float %get_colour_u1_ %param_7
               OpStore %color %147
        %148 = OpLoad %uint %pixel
        %149 = OpUDiv %uint %148 %uint_16
        %150 = OpIEqual %bool %149 %uint_0
               OpSelectionMerge %151 None
               OpBranchConditional %150 %152 %151
        %152 = OpLabel
        %153 = OpLoad %110 %background
        %154 = OpLoad %v2int %coords
        %155 = OpLoad %v4float %color
               OpImageWrite %153 %154 %155
        %156 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %157 = OpLoad %uint %156
        %158 = OpBitwiseOr %uint %157 %uint_4096
        %159 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
               OpStore %159 %158
               OpBranch %151
        %151 = OpLabel
        %160 = OpLoad %uint %pixel
        %161 = OpUDiv %uint %160 %uint_16
        %162 = OpIEqual %bool %161 %uint_4
               OpSelectionMerge %163 None
               OpBranchConditional %162 %164 %163
        %164 = OpLabel
        %165 = OpLoad %110 %foreground
        %166 = OpLoad %v2int %coords
        %167 = OpLoad %v4float %color
               OpImageWrite %165 %166 %167
        %168 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %169 = OpLoad %uint %168
        %170 = OpBitwiseOr %uint %169 %uint_8192
        %171 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
               OpStore %171 %170
               OpBranch %163
        %163 = OpLabel
               OpBranch %135
        %135 = OpLabel
        %172 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %173 = OpLoad %uint %172
               OpStore %param_8 %173
               OpStore %param_9 %uint_256
        %174 = OpFunctionCall %bool %mask_u1_u1_ %param_8 %param_9
               OpSelectionMerge %175 None
               OpBranchConditional %174 %176 %175
        %176 = OpLabel
               OpStore %param_10 %uint_44
        %177 = OpFunctionCall %uint %get_short_u1_ %param_10
        %178 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %179 = OpLoad %uint %178
        %180 = OpIAdd %uint %177 %179
               OpStore %param_11 %180
        %181 = OpFunctionCall %uint %get_byte_u1_ %param_11
               OpStore %row %181
               OpStore %param_12 %uint_47
        %182 = OpFunctionCall %uint %get_byte_u1_ %param_12
               OpStore %sprite %182
        %183 = OpLoad %uint %sprite
        %184 = OpShiftRightLogical %uint %183 %int_11
        %185 = OpBitwiseAnd %uint %184 %uint_1
               OpStore %mode_is_2bpp %185
        %186 = OpLoad %uint %sprite
        %187 = OpShiftRightLogical %uint %186 %int_10
        %188 = OpBitwiseAnd %uint %187 %uint_1
               OpStore %layer_is_foreground %188
               OpStore %param_13 %uint_40
        %189 = OpFunctionCall %uint %get_short_u1_ %param_13
               OpStore %x_1 %189
               OpStore %param_14 %uint_42
        %190 = OpFunctionCall %uint %get_short_u1_ %param_14
               OpStore %y_0 %190
        %191 = OpLoad %uint %sprite
        %192 = OpShiftRightLogical %uint %191 %int_9
        %193 = OpBitwiseAnd %uint %192 %uint_1
               OpStore %y_flipped %193
        %194 = OpLoad %uint %sprite
        %195 = OpShiftRightLogical %uint %194 %int_8
        %196 = OpBitwiseAnd %uint %195 %uint_1
               OpStore %x_flipped %196
        %197 = OpLoad %uint %x_1
        %198 = OpLoad %uint %x_flipped
        %199 = OpISub %uint %uint_1 %198
        %200 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %201 = OpLoad %uint %200
        %202 = OpIMul %uint %199 %201
        %203 = OpIAdd %uint %197 %202
        %204 = OpLoad %uint %x_flipped
        %205 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %206 = OpLoad %uint %205
        %207 = OpISub %uint %uint_8 %206
        %208 = OpIMul %uint %204 %207
        %209 = OpIAdd %uint %203 %208
        %210 = OpBitcast %int %209
        %211 = OpAccessChain %_ptr_Function_int %coords_0 %uint_0
               OpStore %211 %210
        %212 = OpLoad %uint %y_0
        %213 = OpLoad %uint %y_flipped
        %214 = OpISub %uint %uint_1 %213
        %215 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_1
        %216 = OpLoad %uint %215
        %217 = OpIMul %uint %214 %216
        %218 = OpIAdd %uint %212 %217
        %219 = OpLoad %uint %y_flipped
        %220 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_1
        %221 = OpLoad %uint %220
        %222 = OpISub %uint %uint_8 %221
        %223 = OpIMul %uint %219 %222
        %224 = OpIAdd %uint %218 %223
        %225 = OpBitcast %int %224
        %226 = OpAccessChain %_ptr_Function_int %coords_0 %uint_1
               OpStore %226 %225
        %227 = OpLoad %uint %mode_is_2bpp
        %228 = OpIEqual %bool %227 %uint_1
               OpSelectionMerge %229 None
               OpBranchConditional %228 %230 %231
        %230 = OpLabel
               OpReturn
        %231 = OpLabel
        %232 = OpLoad %uint %row
        %233 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %234 = OpLoad %uint %233
        %235 = OpShiftRightLogical %uint %232 %234
        %236 = OpBitwiseAnd %uint %235 %uint_1
               OpStore %draw_colour %236
        %237 = OpLoad %uint %sprite
        %238 = OpBitwiseAnd %uint %237 %uint_15
               OpStore %sprite_low %238
        %239 = OpLoad %uint %draw_colour
        %240 = OpIEqual %bool %239 %uint_1
               OpSelectionMerge %241 None
               OpBranchConditional %240 %242 %243
        %242 = OpLabel
        %244 = OpLoad %uint %sprite_low
        %245 = OpIEqual %bool %244 %uint_0
               OpSelectionMerge %246 None
               OpBranchConditional %245 %247 %246
        %247 = OpLabel
               OpReturn
        %246 = OpLabel
        %248 = OpLoad %uint %sprite_low
        %249 = OpShiftRightLogical %uint %248 %int_2
        %250 = OpBitwiseAnd %uint %249 %uint_3
               OpStore %colour_1 %250
        %251 = OpLoad %uint %colour_1
               OpStore %param_15 %251
        %252 = OpFunctionCall %v4float %get_colour_u1_ %param_15
               OpStore %v_color_1 %252
        %253 = OpLoad %uint %layer_is_foreground
        %254 = OpIEqual %bool %253 %uint_1
               OpSelectionMerge %255 None
               OpBranchConditional %254 %256 %257
        %256 = OpLabel
        %258 = OpLoad %110 %foreground
        %259 = OpLoad %v2int %coords_0
        %260 = OpLoad %v4float %v_color_1
               OpImageWrite %258 %259 %260
               OpBranch %255
        %257 = OpLabel
        %261 = OpLoad %110 %background
        %262 = OpLoad %v2int %coords_0
        %263 = OpLoad %v4float %v_color_1
               OpImageWrite %261 %262 %263
               OpBranch %255
        %255 = OpLabel
               OpBranch %241
        %243 = OpLabel
        %264 = OpLoad %uint %sprite_low
        %265 = OpIEqual %bool %264 %uint_0
        %266 = OpLoad %uint %sprite_low
        %267 = OpIEqual %bool %266 %uint_5
        %268 = OpLogicalOr %bool %265 %267
        %269 = OpLoad %uint %sprite_low
        %270 = OpIEqual %bool %269 %uint_10
        %271 = OpLogicalOr %bool %268 %270
        %272 = OpLoad %uint %sprite_low
        %273 = OpIEqual %bool %272 %uint_15
        %274 = OpLogicalOr %bool %271 %273
               OpSelectionMerge %275 None
               OpBranchConditional %274 %276 %275
        %276 = OpLabel
               OpReturn
        %275 = OpLabel
        %277 = OpLoad %uint %sprite_low
        %278 = OpBitwiseAnd %uint %277 %uint_3
               OpStore %colour_0 %278
        %279 = OpLoad %uint %colour_0
               OpStore %param_16 %279
        %280 = OpFunctionCall %v4float %get_colour_u1_ %param_16
               OpStore %v_color_0 %280
        %281 = OpLoad %uint %layer_is_foreground
        %282 = OpIEqual %bool %281 %uint_1
               OpSelectionMerge %283 None
               OpBranchConditional %282 %284 %285
        %284 = OpLabel
        %286 = OpLoad %110 %foreground
        %287 = OpLoad %v2int %coords_0
        %288 = OpLoad %v4float %v_color_0
               OpImageWrite %286 %287 %288
               OpBranch %283
        %285 = OpLabel
        %289 = OpLoad %110 %background
        %290 = OpLoad %v2int %coords_0
        %291 = OpLoad %v4float %v_color_0
               OpImageWrite %289 %290 %291
               OpBranch %283
        %283 = OpLabel
               OpBranch %241
        %241 = OpLabel
               OpBranch %229
        %229 = OpLabel
               OpBranch %175
        %175 = OpLabel
               OpReturn
               OpFunctionEnd
%get_byte_u1_ = OpFunction %uint None %69
       %addr = OpFunctionParameter %_ptr_Function_uint
        %292 = OpLabel
        %293 = OpLoad %uint %addr
        %294 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_6 %293
        %295 = OpLoad %uint %294
               OpReturnValue %295
               OpFunctionEnd
%get_short_u1_ = OpFunction %uint None %69
     %addr_0 = OpFunctionParameter %_ptr_Function_uint
        %296 = OpLabel
        %297 = OpLoad %uint %addr_0
        %298 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_6 %297
        %299 = OpLoad %uint %298
        %300 = OpShiftLeftLogical %uint %299 %int_8
        %301 = OpLoad %uint %addr_0
        %302 = OpIAdd %uint %301 %uint_1
        %303 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_6 %302
        %304 = OpLoad %uint %303
        %305 = OpIAdd %uint %300 %304
               OpReturnValue %305
               OpFunctionEnd
%mask_u1_u1_ = OpFunction %bool None %71
          %x = OpFunctionParameter %_ptr_Function_uint
       %mask = OpFunctionParameter %_ptr_Function_uint
        %306 = OpLabel
        %307 = OpLoad %uint %x
        %308 = OpLoad %uint %mask
        %309 = OpBitwiseAnd %uint %307 %308
        %310 = OpLoad %uint %mask
        %311 = OpIEqual %bool %309 %310
               OpReturnValue %311
               OpFunctionEnd
%get_colour_u1_ = OpFunction %v4float None %74
   %colour_i = OpFunctionParameter %_ptr_Function_uint
        %312 = OpLabel
      %shift = OpVariable %_ptr_Function_uint Function
          %r = OpVariable %_ptr_Function_uint Function
      %param = OpVariable %_ptr_Function_uint Function
          %g = OpVariable %_ptr_Function_uint Function
    %param_0 = OpVariable %_ptr_Function_uint Function
          %b = OpVariable %_ptr_Function_uint Function
    %param_1 = OpVariable %_ptr_Function_uint Function
%sys_colours = OpVariable %_ptr_Function_v3uint Function
        %313 = OpLoad %uint %colour_i
        %314 = OpULessThan %bool %313 %uint_4
               OpSelectionMerge %315 None
               OpBranchConditional %314 %316 %315
        %316 = OpLabel
        %317 = OpLoad %uint %colour_i
        %318 = OpISub %uint %uint_3 %317
        %319 = OpIMul %uint %318 %uint_4
               OpStore %shift %319
               OpStore %param %uint_8
        %320 = OpFunctionCall %uint %get_short_u1_ %param
        %321 = OpLoad %uint %shift
        %322 = OpShiftRightLogical %uint %320 %321
        %323 = OpBitwiseAnd %uint %322 %uint_15
               OpStore %r %323
               OpStore %param_0 %uint_10
        %324 = OpFunctionCall %uint %get_short_u1_ %param_0
        %325 = OpLoad %uint %shift
        %326 = OpShiftRightLogical %uint %324 %325
        %327 = OpBitwiseAnd %uint %326 %uint_15
               OpStore %g %327
               OpStore %param_1 %uint_12
        %328 = OpFunctionCall %uint %get_short_u1_ %param_1
        %329 = OpLoad %uint %shift
        %330 = OpShiftRightLogical %uint %328 %329
        %331 = OpBitwiseAnd %uint %330 %uint_15
               OpStore %b %331
        %332 = OpLoad %uint %r
        %333 = OpLoad %uint %g
        %334 = OpLoad %uint %b
        %335 = OpCompositeConstruct %v3uint %332 %333 %334
               OpStore %sys_colours %335
        %336 = OpLoad %v3uint %sys_colours
        %337 = OpConvertUToF %v3float %336
        %338 = OpCompositeConstruct %v3float %float_16 %float_16 %float_16
        %339 = OpFDiv %v3float %337 %338
        %340 = OpCompositeExtract %float %339 0
        %341 = OpCompositeExtract %float %339 1
        %342 = OpCompositeExtract %float %339 2
        %343 = OpCompositeConstruct %v4float %340 %341 %342 %float_1
               OpReturnValue %343
        %315 = OpLabel
               OpReturnValue %95
               OpFunctionEnd
