; SPIR-V
; Version: 1.5
; Generator: Khronos SPIR-V Tools Assembler; 0
; Bound: 363
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %uxn %gl_GlobalInvocationID %background %foreground
               OpExecutionMode %main LocalSize 8 8 1
               OpSource GLSL 450
               OpName %main "main"
               OpName %get_byte_u1_ "get_byte(u1;"
               OpName %addr "addr"
               OpName %get_short_u1_ "get_short(u1;"
               OpName %addr_0 "addr"
               OpName %mask_u1_u1_ "mask(u1;u1;"
               OpName %x "x"
               OpName %mask "mask"
               OpName %get_colour_u1_ "get_colour(u1;"
               OpName %colour_i "colour_i"
               OpName %get_sprite_colour1_u1_ "get_sprite_colour1(u1;"
               OpName %sprite_low "sprite_low"
               OpName %get_sprite_colour0_u1_ "get_sprite_colour0(u1;"
               OpName %sprite_low_0 "sprite_low"
               OpName %UXN_Buffer "UXN_Buffer"
               OpMemberName %UXN_Buffer 0 "pc"
               OpMemberName %UXN_Buffer 1 "ram"
               OpMemberName %UXN_Buffer 2 "wst"
               OpMemberName %UXN_Buffer 3 "pWst"
               OpMemberName %UXN_Buffer 4 "rst"
               OpMemberName %UXN_Buffer 5 "pRst"
               OpMemberName %UXN_Buffer 6 "dev"
               OpMemberName %UXN_Buffer 7 "deviceFlags"
               OpName %uxn "uxn"
               OpName %shift "shift"
               OpName %r "r"
               OpName %param "param"
               OpName %g "g"
               OpName %param_0 "param"
               OpName %b "b"
               OpName %param_1 "param"
               OpName %sys_colours "sys_colours"
               OpName %param_2 "param"
               OpName %param_3 "param"
               OpName %gl_GlobalInvocationID "gl_GlobalInvocationID"
               OpName %x_0 "x"
               OpName %param_4 "param"
               OpName %y "y"
               OpName %param_5 "param"
               OpName %coords "coords"
               OpName %pixel "pixel"
               OpName %param_6 "param"
               OpName %color "color"
               OpName %param_7 "param"
               OpName %background "background"
               OpName %foreground "foreground"
               OpName %param_8 "param"
               OpName %param_9 "param"
               OpName %row "row"
               OpName %param_10 "param"
               OpName %param_11 "param"
               OpName %sprite "sprite"
               OpName %param_12 "param"
               OpName %mode_is_2bpp "mode_is_2bpp"
               OpName %layer_is_foreground "layer_is_foreground"
               OpName %x_1 "x"
               OpName %param_13 "param"
               OpName %y_0 "y"
               OpName %param_14 "param"
               OpName %y_flipped "y_flipped"
               OpName %x_flipped "x_flipped"
               OpName %coords_0 "coords"
               OpName %draw_colour "draw_colour"
               OpName %colour_1 "colour_1"
               OpName %param_15 "param"
               OpName %v_color_1 "v_color_1"
               OpName %param_16 "param"
               OpName %colour_0 "colour_0"
               OpName %param_17 "param"
               OpName %v_color_0 "v_color_0"
               OpName %param_18 "param"
               OpDecorate %_arr_uint_uint_65536 ArrayStride 4
               OpDecorate %_arr_uint_uint_256 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_0 ArrayStride 4
               OpDecorate %_arr_uint_uint_256_1 ArrayStride 4
               OpMemberDecorate %UXN_Buffer 0 Offset 0
               OpMemberDecorate %UXN_Buffer 1 Offset 4
               OpMemberDecorate %UXN_Buffer 2 Offset 262148
               OpMemberDecorate %UXN_Buffer 3 Offset 263172
               OpMemberDecorate %UXN_Buffer 4 Offset 263176
               OpMemberDecorate %UXN_Buffer 5 Offset 264200
               OpMemberDecorate %UXN_Buffer 6 Offset 264204
               OpMemberDecorate %UXN_Buffer 7 Offset 265228
               OpDecorate %UXN_Buffer Block
               OpDecorate %uxn DescriptorSet 0
               OpDecorate %uxn Binding 0
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %background DescriptorSet 0
               OpDecorate %background Binding 1
               OpDecorate %foreground DescriptorSet 0
               OpDecorate %foreground Binding 2
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
       %void = OpTypeVoid
         %71 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
         %74 = OpTypeFunction %uint %_ptr_Function_uint
       %bool = OpTypeBool
         %76 = OpTypeFunction %bool %_ptr_Function_uint %_ptr_Function_uint
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
         %79 = OpTypeFunction %v4float %_ptr_Function_uint
 %uint_65536 = OpConstant %uint 65536
%_arr_uint_uint_65536 = OpTypeArray %uint %uint_65536
   %uint_256 = OpConstant %uint 256
%_arr_uint_uint_256 = OpTypeArray %uint %uint_256
%_arr_uint_uint_256_0 = OpTypeArray %uint %uint_256
%_arr_uint_uint_256_1 = OpTypeArray %uint %uint_256
 %UXN_Buffer = OpTypeStruct %uint %_arr_uint_uint_65536 %_arr_uint_uint_256 %uint %_arr_uint_uint_256_0 %uint %_arr_uint_uint_256_1 %uint
%_ptr_StorageBuffer_UXN_Buffer = OpTypePointer StorageBuffer %UXN_Buffer
        %uxn = OpVariable %_ptr_StorageBuffer_UXN_Buffer StorageBuffer
        %int = OpTypeInt 32 1
      %int_6 = OpConstant %int 6
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
      %int_8 = OpConstant %int 8
     %uint_1 = OpConstant %uint 1
     %uint_4 = OpConstant %uint 4
     %uint_3 = OpConstant %uint 3
     %uint_8 = OpConstant %uint 8
    %uint_15 = OpConstant %uint 15
    %uint_10 = OpConstant %uint 10
    %uint_12 = OpConstant %uint 12
     %v3uint = OpTypeVector %uint 3
%_ptr_Function_v3uint = OpTypePointer Function %v3uint
    %v3float = OpTypeVector %float 3
   %float_16 = OpConstant %float 16
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
        %100 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
     %uint_0 = OpConstant %uint 0
      %int_2 = OpConstant %int 2
     %uint_5 = OpConstant %uint 5
      %int_7 = OpConstant %int 7
    %uint_16 = OpConstant %uint 16
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
     %v2uint = OpTypeVector %uint 2
    %v2float = OpTypeVector %float 2
        %109 = OpConstantComposite %v2float %float_0 %float_0
     %v2bool = OpTypeVector %bool 2
    %uint_40 = OpConstant %uint 40
    %uint_42 = OpConstant %uint 42
      %v2int = OpTypeVector %int 2
%_ptr_Function_v2int = OpTypePointer Function %v2int
    %uint_46 = OpConstant %uint 46
%_ptr_Function_v4float = OpTypePointer Function %v4float
        %117 = OpTypeImage %float 2D 0 0 0 2 Rgba8
%_ptr_UniformConstant_117 = OpTypePointer UniformConstant %117
 %background = OpVariable %_ptr_UniformConstant_117 UniformConstant
  %uint_4096 = OpConstant %uint 4096
 %foreground = OpVariable %_ptr_UniformConstant_117 UniformConstant
  %uint_8192 = OpConstant %uint 8192
    %uint_44 = OpConstant %uint 44
%_ptr_Input_uint = OpTypePointer Input %uint
    %uint_47 = OpConstant %uint 47
     %int_11 = OpConstant %int 11
     %int_10 = OpConstant %int 10
      %int_9 = OpConstant %int 9
%_ptr_Function_int = OpTypePointer Function %int
%gl_WorkGroupSize = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_1
       %main = OpFunction %void None %71
        %128 = OpLabel
    %param_2 = OpVariable %_ptr_Function_uint Function
    %param_3 = OpVariable %_ptr_Function_uint Function
        %x_0 = OpVariable %_ptr_Function_uint Function
    %param_4 = OpVariable %_ptr_Function_uint Function
          %y = OpVariable %_ptr_Function_uint Function
    %param_5 = OpVariable %_ptr_Function_uint Function
     %coords = OpVariable %_ptr_Function_v2int Function
      %pixel = OpVariable %_ptr_Function_uint Function
    %param_6 = OpVariable %_ptr_Function_uint Function
      %color = OpVariable %_ptr_Function_v4float Function
    %param_7 = OpVariable %_ptr_Function_uint Function
    %param_8 = OpVariable %_ptr_Function_uint Function
    %param_9 = OpVariable %_ptr_Function_uint Function
        %row = OpVariable %_ptr_Function_uint Function
   %param_10 = OpVariable %_ptr_Function_uint Function
   %param_11 = OpVariable %_ptr_Function_uint Function
     %sprite = OpVariable %_ptr_Function_uint Function
   %param_12 = OpVariable %_ptr_Function_uint Function
%mode_is_2bpp = OpVariable %_ptr_Function_uint Function
%layer_is_foreground = OpVariable %_ptr_Function_uint Function
        %x_1 = OpVariable %_ptr_Function_uint Function
   %param_13 = OpVariable %_ptr_Function_uint Function
        %y_0 = OpVariable %_ptr_Function_uint Function
   %param_14 = OpVariable %_ptr_Function_uint Function
  %y_flipped = OpVariable %_ptr_Function_uint Function
  %x_flipped = OpVariable %_ptr_Function_uint Function
   %coords_0 = OpVariable %_ptr_Function_v2int Function
%draw_colour = OpVariable %_ptr_Function_uint Function
   %colour_1 = OpVariable %_ptr_Function_uint Function
   %param_15 = OpVariable %_ptr_Function_uint Function
  %v_color_1 = OpVariable %_ptr_Function_v4float Function
   %param_16 = OpVariable %_ptr_Function_uint Function
   %colour_0 = OpVariable %_ptr_Function_uint Function
   %param_17 = OpVariable %_ptr_Function_uint Function
  %v_color_0 = OpVariable %_ptr_Function_v4float Function
   %param_18 = OpVariable %_ptr_Function_uint Function
        %129 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %130 = OpLoad %uint %129
               OpStore %param_2 %130
               OpStore %param_3 %uint_16
        %131 = OpFunctionCall %bool %mask_u1_u1_ %param_2 %param_3
               OpSelectionMerge %132 None
               OpBranchConditional %131 %133 %132
        %133 = OpLabel
        %134 = OpLoad %v3uint %gl_GlobalInvocationID
        %135 = OpVectorShuffle %v2uint %134 %134 0 1
        %136 = OpConvertUToF %v2float %135
        %137 = OpFOrdEqual %v2bool %136 %109
        %138 = OpAll %bool %137
               OpBranch %132
        %132 = OpLabel
        %139 = OpPhi %bool %131 %128 %138 %133
               OpSelectionMerge %140 None
               OpBranchConditional %139 %141 %140
        %141 = OpLabel
               OpStore %param_4 %uint_40
        %142 = OpFunctionCall %uint %get_short_u1_ %param_4
               OpStore %x_0 %142
               OpStore %param_5 %uint_42
        %143 = OpFunctionCall %uint %get_short_u1_ %param_5
               OpStore %y %143
        %144 = OpLoad %uint %x_0
        %145 = OpBitcast %int %144
        %146 = OpLoad %uint %y
        %147 = OpBitcast %int %146
        %148 = OpCompositeConstruct %v2int %145 %147
               OpStore %coords %148
               OpStore %param_6 %uint_46
        %149 = OpFunctionCall %uint %get_byte_u1_ %param_6
               OpStore %pixel %149
        %150 = OpLoad %uint %pixel
        %151 = OpBitwiseAnd %uint %150 %uint_15
               OpStore %param_7 %151
        %152 = OpFunctionCall %v4float %get_colour_u1_ %param_7
               OpStore %color %152
        %153 = OpLoad %uint %pixel
        %154 = OpUDiv %uint %153 %uint_16
        %155 = OpIEqual %bool %154 %uint_0
               OpSelectionMerge %156 None
               OpBranchConditional %155 %157 %156
        %157 = OpLabel
        %158 = OpLoad %117 %background
        %159 = OpLoad %v2int %coords
        %160 = OpLoad %v4float %color
               OpImageWrite %158 %159 %160
        %161 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %162 = OpLoad %uint %161
        %163 = OpBitwiseOr %uint %162 %uint_4096
        %164 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
               OpStore %164 %163
               OpBranch %156
        %156 = OpLabel
        %165 = OpLoad %uint %pixel
        %166 = OpUDiv %uint %165 %uint_16
        %167 = OpIEqual %bool %166 %uint_4
               OpSelectionMerge %168 None
               OpBranchConditional %167 %169 %168
        %169 = OpLabel
        %170 = OpLoad %117 %foreground
        %171 = OpLoad %v2int %coords
        %172 = OpLoad %v4float %color
               OpImageWrite %170 %171 %172
        %173 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %174 = OpLoad %uint %173
        %175 = OpBitwiseOr %uint %174 %uint_8192
        %176 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
               OpStore %176 %175
               OpBranch %168
        %168 = OpLabel
               OpBranch %140
        %140 = OpLabel
        %177 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_7
        %178 = OpLoad %uint %177
               OpStore %param_8 %178
               OpStore %param_9 %uint_256
        %179 = OpFunctionCall %bool %mask_u1_u1_ %param_8 %param_9
               OpSelectionMerge %180 None
               OpBranchConditional %179 %181 %180
        %181 = OpLabel
               OpStore %param_10 %uint_44
        %182 = OpFunctionCall %uint %get_short_u1_ %param_10
        %183 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %184 = OpLoad %uint %183
        %185 = OpIAdd %uint %182 %184
               OpStore %param_11 %185
        %186 = OpFunctionCall %uint %get_byte_u1_ %param_11
               OpStore %row %186
               OpStore %param_12 %uint_47
        %187 = OpFunctionCall %uint %get_byte_u1_ %param_12
               OpStore %sprite %187
        %188 = OpLoad %uint %sprite
        %189 = OpShiftRightLogical %uint %188 %int_11
        %190 = OpBitwiseAnd %uint %189 %uint_1
               OpStore %mode_is_2bpp %190
        %191 = OpLoad %uint %sprite
        %192 = OpShiftRightLogical %uint %191 %int_10
        %193 = OpBitwiseAnd %uint %192 %uint_1
               OpStore %layer_is_foreground %193
               OpStore %param_13 %uint_40
        %194 = OpFunctionCall %uint %get_short_u1_ %param_13
               OpStore %x_1 %194
               OpStore %param_14 %uint_42
        %195 = OpFunctionCall %uint %get_short_u1_ %param_14
               OpStore %y_0 %195
        %196 = OpLoad %uint %sprite
        %197 = OpShiftRightLogical %uint %196 %int_9
        %198 = OpBitwiseAnd %uint %197 %uint_1
               OpStore %y_flipped %198
        %199 = OpLoad %uint %sprite
        %200 = OpShiftRightLogical %uint %199 %int_8
        %201 = OpBitwiseAnd %uint %200 %uint_1
               OpStore %x_flipped %201
        %202 = OpLoad %uint %x_1
        %203 = OpLoad %uint %x_flipped
        %204 = OpISub %uint %uint_1 %203
        %205 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %206 = OpLoad %uint %205
        %207 = OpIMul %uint %204 %206
        %208 = OpIAdd %uint %202 %207
        %209 = OpLoad %uint %x_flipped
        %210 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %211 = OpLoad %uint %210
        %212 = OpISub %uint %uint_8 %211
        %213 = OpIMul %uint %209 %212
        %214 = OpIAdd %uint %208 %213
        %215 = OpBitcast %int %214
        %216 = OpAccessChain %_ptr_Function_int %coords_0 %uint_0
               OpStore %216 %215
        %217 = OpLoad %uint %y_0
        %218 = OpLoad %uint %y_flipped
        %219 = OpISub %uint %uint_1 %218
        %220 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_1
        %221 = OpLoad %uint %220
        %222 = OpIMul %uint %219 %221
        %223 = OpIAdd %uint %217 %222
        %224 = OpLoad %uint %y_flipped
        %225 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_1
        %226 = OpLoad %uint %225
        %227 = OpISub %uint %uint_8 %226
        %228 = OpIMul %uint %224 %227
        %229 = OpIAdd %uint %223 %228
        %230 = OpBitcast %int %229
        %231 = OpAccessChain %_ptr_Function_int %coords_0 %uint_1
               OpStore %231 %230
        %232 = OpLoad %uint %mode_is_2bpp
        %233 = OpIEqual %bool %232 %uint_1
               OpSelectionMerge %234 None
               OpBranchConditional %233 %235 %236
        %235 = OpLabel
               OpReturn
        %236 = OpLabel
        %237 = OpLoad %uint %row
        %238 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
        %239 = OpLoad %uint %238
        %240 = OpShiftRightLogical %uint %237 %239
        %241 = OpBitwiseAnd %uint %240 %uint_1
               OpStore %draw_colour %241
        %242 = OpLoad %uint %draw_colour
        %243 = OpIEqual %bool %242 %uint_1
               OpSelectionMerge %244 None
               OpBranchConditional %243 %245 %246
        %245 = OpLabel
        %247 = OpLoad %uint %sprite
        %248 = OpBitwiseAnd %uint %247 %uint_15
               OpStore %param_15 %248
        %249 = OpFunctionCall %uint %get_sprite_colour1_u1_ %param_15
               OpStore %colour_1 %249
        %250 = OpLoad %uint %colour_1
        %251 = OpIEqual %bool %250 %uint_10
               OpSelectionMerge %252 None
               OpBranchConditional %251 %253 %252
        %253 = OpLabel
               OpReturn
        %252 = OpLabel
        %254 = OpLoad %uint %colour_1
               OpStore %param_16 %254
        %255 = OpFunctionCall %v4float %get_colour_u1_ %param_16
               OpStore %v_color_1 %255
        %256 = OpLoad %uint %layer_is_foreground
        %257 = OpIEqual %bool %256 %uint_1
               OpSelectionMerge %258 None
               OpBranchConditional %257 %259 %260
        %259 = OpLabel
        %261 = OpLoad %117 %foreground
        %262 = OpLoad %v2int %coords_0
        %263 = OpLoad %v4float %v_color_1
               OpImageWrite %261 %262 %263
               OpBranch %258
        %260 = OpLabel
        %264 = OpLoad %117 %background
        %265 = OpLoad %v2int %coords_0
        %266 = OpLoad %v4float %v_color_1
               OpImageWrite %264 %265 %266
               OpBranch %258
        %258 = OpLabel
               OpBranch %244
        %246 = OpLabel
        %267 = OpLoad %uint %sprite
        %268 = OpBitwiseAnd %uint %267 %uint_15
               OpStore %param_17 %268
        %269 = OpFunctionCall %uint %get_sprite_colour0_u1_ %param_17
               OpStore %colour_0 %269
        %270 = OpLoad %uint %colour_0
        %271 = OpIEqual %bool %270 %uint_10
               OpSelectionMerge %272 None
               OpBranchConditional %271 %273 %272
        %273 = OpLabel
               OpReturn
        %272 = OpLabel
        %274 = OpLoad %uint %colour_0
               OpStore %param_18 %274
        %275 = OpFunctionCall %v4float %get_colour_u1_ %param_18
               OpStore %v_color_0 %275
        %276 = OpLoad %uint %layer_is_foreground
        %277 = OpIEqual %bool %276 %uint_1
               OpSelectionMerge %278 None
               OpBranchConditional %277 %279 %280
        %279 = OpLabel
        %281 = OpLoad %117 %foreground
        %282 = OpLoad %v2int %coords_0
        %283 = OpLoad %v4float %v_color_0
               OpImageWrite %281 %282 %283
               OpBranch %278
        %280 = OpLabel
        %284 = OpLoad %117 %background
        %285 = OpLoad %v2int %coords_0
        %286 = OpLoad %v4float %v_color_0
               OpImageWrite %284 %285 %286
               OpBranch %278
        %278 = OpLabel
               OpBranch %244
        %244 = OpLabel
               OpBranch %234
        %234 = OpLabel
               OpBranch %180
        %180 = OpLabel
               OpReturn
               OpFunctionEnd
%get_byte_u1_ = OpFunction %uint None %74
       %addr = OpFunctionParameter %_ptr_Function_uint
        %287 = OpLabel
        %288 = OpLoad %uint %addr
        %289 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_6 %288
        %290 = OpLoad %uint %289
               OpReturnValue %290
               OpFunctionEnd
%get_short_u1_ = OpFunction %uint None %74
     %addr_0 = OpFunctionParameter %_ptr_Function_uint
        %291 = OpLabel
        %292 = OpLoad %uint %addr_0
        %293 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_6 %292
        %294 = OpLoad %uint %293
        %295 = OpShiftLeftLogical %uint %294 %int_8
        %296 = OpLoad %uint %addr_0
        %297 = OpIAdd %uint %296 %uint_1
        %298 = OpAccessChain %_ptr_StorageBuffer_uint %uxn %int_6 %297
        %299 = OpLoad %uint %298
        %300 = OpIAdd %uint %295 %299
               OpReturnValue %300
               OpFunctionEnd
%mask_u1_u1_ = OpFunction %bool None %76
          %x = OpFunctionParameter %_ptr_Function_uint
       %mask = OpFunctionParameter %_ptr_Function_uint
        %301 = OpLabel
        %302 = OpLoad %uint %x
        %303 = OpLoad %uint %mask
        %304 = OpBitwiseAnd %uint %302 %303
        %305 = OpLoad %uint %mask
        %306 = OpIEqual %bool %304 %305
               OpReturnValue %306
               OpFunctionEnd
%get_colour_u1_ = OpFunction %v4float None %79
   %colour_i = OpFunctionParameter %_ptr_Function_uint
        %307 = OpLabel
      %shift = OpVariable %_ptr_Function_uint Function
          %r = OpVariable %_ptr_Function_uint Function
      %param = OpVariable %_ptr_Function_uint Function
          %g = OpVariable %_ptr_Function_uint Function
    %param_0 = OpVariable %_ptr_Function_uint Function
          %b = OpVariable %_ptr_Function_uint Function
    %param_1 = OpVariable %_ptr_Function_uint Function
%sys_colours = OpVariable %_ptr_Function_v3uint Function
        %308 = OpLoad %uint %colour_i
        %309 = OpULessThan %bool %308 %uint_4
               OpSelectionMerge %310 None
               OpBranchConditional %309 %311 %310
        %311 = OpLabel
        %312 = OpLoad %uint %colour_i
        %313 = OpISub %uint %uint_3 %312
        %314 = OpIMul %uint %313 %uint_4
               OpStore %shift %314
               OpStore %param %uint_8
        %315 = OpFunctionCall %uint %get_short_u1_ %param
        %316 = OpLoad %uint %shift
        %317 = OpShiftRightLogical %uint %315 %316
        %318 = OpBitwiseAnd %uint %317 %uint_15
               OpStore %r %318
               OpStore %param_0 %uint_10
        %319 = OpFunctionCall %uint %get_short_u1_ %param_0
        %320 = OpLoad %uint %shift
        %321 = OpShiftRightLogical %uint %319 %320
        %322 = OpBitwiseAnd %uint %321 %uint_15
               OpStore %g %322
               OpStore %param_1 %uint_12
        %323 = OpFunctionCall %uint %get_short_u1_ %param_1
        %324 = OpLoad %uint %shift
        %325 = OpShiftRightLogical %uint %323 %324
        %326 = OpBitwiseAnd %uint %325 %uint_15
               OpStore %b %326
        %327 = OpLoad %uint %r
        %328 = OpLoad %uint %g
        %329 = OpLoad %uint %b
        %330 = OpCompositeConstruct %v3uint %327 %328 %329
               OpStore %sys_colours %330
        %331 = OpLoad %v3uint %sys_colours
        %332 = OpConvertUToF %v3float %331
        %333 = OpCompositeConstruct %v3float %float_16 %float_16 %float_16
        %334 = OpFDiv %v3float %332 %333
        %335 = OpCompositeExtract %float %334 0
        %336 = OpCompositeExtract %float %334 1
        %337 = OpCompositeExtract %float %334 2
        %338 = OpCompositeConstruct %v4float %335 %336 %337 %float_1
               OpReturnValue %338
        %310 = OpLabel
               OpReturnValue %100
               OpFunctionEnd
%get_sprite_colour1_u1_ = OpFunction %uint None %74
 %sprite_low = OpFunctionParameter %_ptr_Function_uint
        %339 = OpLabel
        %340 = OpLoad %uint %sprite_low
        %341 = OpIEqual %bool %340 %uint_0
               OpSelectionMerge %342 None
               OpBranchConditional %341 %343 %342
        %343 = OpLabel
               OpReturnValue %uint_10
        %342 = OpLabel
        %344 = OpLoad %uint %sprite_low
        %345 = OpShiftRightLogical %uint %344 %int_2
        %346 = OpBitwiseAnd %uint %345 %uint_3
               OpReturnValue %346
               OpFunctionEnd
%get_sprite_colour0_u1_ = OpFunction %uint None %74
%sprite_low_0 = OpFunctionParameter %_ptr_Function_uint
        %347 = OpLabel
        %348 = OpLoad %uint %sprite_low_0
        %349 = OpIEqual %bool %348 %uint_0
        %350 = OpLoad %uint %sprite_low_0
        %351 = OpIEqual %bool %350 %uint_5
        %352 = OpLogicalOr %bool %349 %351
        %353 = OpLoad %uint %sprite_low_0
        %354 = OpIEqual %bool %353 %uint_10
        %355 = OpLogicalOr %bool %352 %354
        %356 = OpLoad %uint %sprite_low_0
        %357 = OpIEqual %bool %356 %uint_15
        %358 = OpLogicalOr %bool %355 %357
               OpSelectionMerge %359 None
               OpBranchConditional %358 %360 %359
        %360 = OpLabel
               OpReturnValue %uint_10
        %359 = OpLabel
        %361 = OpLoad %uint %sprite_low_0
        %362 = OpBitwiseAnd %uint %361 %uint_3
               OpReturnValue %362
               OpFunctionEnd
